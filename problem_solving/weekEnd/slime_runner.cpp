#include <iostream>
#include <string>
#include <conio.h>
#include <windows.h>
#include <sstream>
#include <vector>
#include <thread>
#include <chrono>
#include "Colors.hpp"
#include <variant>

using namespace std;

class Utility {

public:
    Utility() {}

    void gotoxy(int x, int y) { // 커서 위치 이동용

        COORD Pos = { x,y };
        //커서 이동
        SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), Pos);

        CONSOLE_CURSOR_INFO ConsoleCursor;
        ConsoleCursor.bVisible = false;
        ConsoleCursor.dwSize = 1;
        SetConsoleCursorInfo(GetStdHandle(STD_OUTPUT_HANDLE), &ConsoleCursor);
    }
};

class Scene;

class Object {

public:

    //오브젝트의 좌측 상단 좌표
    int X;
    int Y;

    int Width; //가로
    int Height; //세로

    //이 오브젝트가 그려지는지 안그려지는지
    bool Active;

    //오브젝트 이미지
    string** image;

    //가로세로 값을 받아서 이미지 동적할당
    Object(int width, int height) {
        X = 0;
        Y = 0;
        Active = true;
        Width = width;
        Height = height;

        image = new string * [Height];
        for (int i = 0; i < Height; i++)
        {
            image[i] = new string[Width];
        }
    }

    //소멸자에서 할당된 메모리 해제
    ~Object() {
        for (int i = 0; i < Height; i++) {
            delete[] image[i];
        }
        delete[] image;
    }

    virtual void Render(Scene& s) {}

    virtual void ImagePaste() {}
};

class Scene {

public:

    string output; // 출력용
    string ScreenBuffer[39][100]; // x 100, y 40
    vector<Object*> objects;
    Utility u;


    Scene() {
        output = "";
        ClearScreenBuf();
    }

    // Active한 Object의 Render를 호출해 ScreenBuffer에 저장하고 ScreenBuffer 출력
    void Draw() {
        for (Object* obj : objects) {
            if (obj->Active == true)
            {
                obj->Render(*this);
            }
        }
        output = "";

        for (int i = 0; i < 39; i++)
        {
            for (int j = 0; j < 100; j++)
            {
                output += ScreenBuffer[i][j];
            }
            output += Reset"\n";
        }
        cout << output;
        cout.flush();
    }

    // ScreenBuffer에 저장된 Object를 지워 ScreenBuffer를 초기화
    void ClearScreenBuf() {
        for (int i = 0; i < 39; i++)
        {
            for (int j = 0; j < 100; j++)
            {
                ScreenBuffer[i][j] = "  ";
            }
        }
    }

    //object벡터에 오브젝트추가하는 함수
    void AddObject(Object& o) {
        objects.push_back(&o);
    }
};


class Cloud : public Object
{
public:
    int MoveCount;
    int MoveSpeed;

    Cloud(int x, int y, int width, int height, int speed) : Object(width, height) {
        X = x;
        Y = y;
        Active = true;
        MoveCount = 0;
        Width = width;
        Height = height;
        MoveSpeed = speed;
        ImagePaste();
    }

    string defaultimage[8][15] = {
        {"  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  " , "  ", "  ", "  ", "  ", "  ", "  "},
        {"  ", "  ", "  ", "  ", "  ", "  ", White"■", White"■" Reset, "  " , "  ", "  ", "  ", "  ", "  ", "  "},
        {"  ", "  ", White"■", White"■" Reset, "  ", White"■", White"■", White"■", White"■" Reset, "  ", "  ", Lgray"■", White"■" Reset, "  ", "  "},
        {"  ", White"■", White"■", White"■", White"■", White"■", White"■", White"■", White"■" Reset, "  ", Lgray"■", White"■", White"■", White"■" Reset, "  "},
        {"  ", White"■", White"■", White"■", Lgray"■", White"■", White"▦", White"■", White"■" , Lgray"■", White"■", White"■", White"■", White"■", White"■" Reset},
        {Lgray"■", Lgray"■", White"■", Lgray"■", Lgray"■", White"■", White"■", White"■", Lgray"■", Lgray"■", Lgray"■", White"■", White"■", White"■", Lgray"■" Reset},
        {Lgray"■", Lgray"■", Lgray"■", Lgray"■", Lgray"■", Lgray"■", Lgray"■", Lgray"■", Lgray"■", Lgray"■", Lgray"■", Lgray"■", Lgray"■", Lgray"■", Lgray"■" Reset},
        {"  ", Lgray"■", Lgray"■", Lgray"■", Lgray"■", Lgray"■", Lgray"■", Lgray"■", Lgray"■", Lgray"■", Lgray"■",Lgray"■", Lgray"■", Lgray"■" Reset, "  "}
    };

    void setActive(bool b) {
        Active = b;
    }

    void Render(Scene& s) {
        for (int i = 0; i < Height; i++)
        {
            if ((Y + i) < 39)
            {
                for (int j = 0; j < Width; j++)
                {
                    if (0 <= (X + j) && (X + j) < 100)
                    {
                        if (image[i][j] != "  ")
                        {
                            s.ScreenBuffer[Y + i][X + j] = image[i][j];
                        }
                    }
                }
            }
        }
    }

    void ImagePaste() {
        for (int i = 0; i < 8; i++) {
            for (int j = 0; j < 15; j++) {
                image[i][j] = defaultimage[i][j];
            }
        }
    }

    void MoveCloud() {
        if (MoveCount == MoveSpeed) {
            X--;
            if (X + Width < 0) {
                X = 100;
            }
            MoveCount = 0;
        }
        else {
            MoveCount++;
        }
    }
};

class Mountain : public Object
{
public:
    int MoveCount;
    int MoveSpeed;

    Mountain(int x, int y, int width, int height) : Object(width, height) {
        X = x;
        Y = y;
        Active = true;
        MoveCount = 0;
        Width = width;
        Height = height;
        MoveSpeed = 100;
        ImagePaste();
    }

    string defaultimage[22][46] = {

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▣","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","■","▣","▣","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","■","■","▣","▣","▧","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","■","■","■","▣","▧","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","■","■","■","▣","▣","▧","  ","  ","  ","▣","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","■","■","■","▣","▣","▣","▧","▧","  ","■","■","▣","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","■","■","■","■","▣","▣","▣","▣","▧","■","■","■","▣","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","■","■","■","▣","▣","▣","▣","▣","▧","▧","■","■","▣","▣","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","■","■","■","■","▣","▣","▣","▣","▣","▣","▧","▧","▣","▣","▣","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","■","■","■","■","▣","▣","▣","▣","▣","▣","▣","▧","▧","▧","▣","▣","▧","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","■","■","■","■","■","▣","▣","▣","■","▣","▣","▣","▣","▧","▧","▧","▧","▣","▧","  ","  ","  ","  ","  ","  ","■","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","■","■","■","■","■","■","▣","▣","▣","■","▣","▣","▣","▣","▣","▧","▧","▧","▧","▧","▧","  ","  ","  ","  ","■","■","▣","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","■","■","■","■","■","▣","▣","▣","■","▣","▣","▣","▣","▣","▣","▧","▧","▧","▧","▧","▧","▧","  ","  ","■","■","▣","▣","▣","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","■","■","■","■","■","▣","▣","■","▣","▣","▣","▣","▣","▣","▣","▣","▧","▧","▧","▧","▧","▧","▧","■","■","■","▣","▣","▣","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","■","■","■","■","■","▣","▣","■","■","▣","▣","▣","▣","▣","▧","▣","▣","▣","▧","▧","▧","▧","■","■","■","■","▣","▣","▣","▧","▧","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","■","■","■","■","■","■","▣","▣","■","■","▣","▣","▧","▣","▣","▧","▧","▣","▣","▣","▧","▧","▧","■","■","■","■","▣","▣","▣","▧","▧","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","■","■","■","▣","■","▣","▣","■","■","■","▣","▣","▧","▧","▣","▣","▧","▧","▧","▣","▧","▧","■","■","■","■","■","▣","▣","▣","▧","▧","▧","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","■","■","▣","■","▣","▣","■","■","■","■","▣","▣","▣","▧","▧","▣","▧","▧","▧","▧","▧","■","■","▣","▣","■","▣","▣","▣","▧","▧","▧","▧","▧","▧","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","■","■","▣","■","▣","▣","■","■","■","■","▣","▣","▣","▣","▧","▧","▧","▧","▧","▧","▧","■","■","▧","▣","▣","■","▣","▣","▣","▧","▧","▧","▧","▧","▧","▧","  ","  "},

        {"  ","  ","  ","  ","  ","  ","■","▣","▣","▧","■","■","■","■","■","■","■","▣","▣","▣","▣","▣","▧","▧","▧","▧","▧","■","▧","▧","▧","▣","■","▣","▣","▣","▧","▧","▧","▧","▣","▧","▧","▧","▧","  "},

        {"  ","  ","  ","  ","■","■","▣","▣","▧","▧","▣","■","■","■","■","■","▣","▣","▣","▣","▣","▣","▧","▧","▧","▧","■","▧","▧","▧","▣","▣","▣","▣","▣","▧","▧","▧","▣","▧","▣","▣","▧","▧","▧","  "},

        {"■","■","■","■","▣","▣","▣","▧","▧","▧","▣","▣","■","■","■","▣","▣","▣","▣","▣","▣","▧","▧","▧","▧","▧","▧","▧","▧","▣","▣","▣","▣","▣","▧","▧","▧","▣","▣","▧","▣","▣","▣","▧","▧","  "}

    };

    void setActive(bool b) {
        Active = b;
    }

    void Render(Scene& s) {
        for (int i = 0; i < Height; i++)
        {
            if ((Y + i) < 39)
            {
                for (int j = 0; j < Width; j++)
                {
                    if (0 <= (X + j) && (X + j) < 100 && image[i][j] != "  ")
                    {
                        s.ScreenBuffer[Y + i][X + j] = image[i][j];
                    }
                }
            }
        }
    }

    void ImagePaste() {
        for (int i = 0; i < 22; i++) {
            for (int j = 0; j < 46; j++) {
                if (defaultimage[i][j] == "■")
                {
                    defaultimage[i][j] = White"■";
                }
                else if (defaultimage[i][j] == "▣") {
                    defaultimage[i][j] = Lgray"▣";
                }
                else if (defaultimage[i][j] == "▧") {
                    defaultimage[i][j] = Gray"▧";
                }
                else if (defaultimage[i][j] == "  " && j != 0 && defaultimage[i][j - 1] != "  ")
                {
                    defaultimage[i][j] = "  " Reset;
                }
                image[i][j] = defaultimage[i][j];
            }
        }
    }

    void MoveMountain() {
        if (MoveCount == MoveSpeed) {
            X--;
            if (X + Width < 0) {
                X = 100;
            }
            MoveCount = 0;
        }
        else {
            MoveCount++;
        }
    }
};

class Ground : public Object
{

public:
    int FlowerCount;

    Ground(int width, int height) : Object(width, height) {
        X = 0;
        Y = 35;
        Active = true;
        FlowerCount = 0;
        Width = width;
        Height = height;
        SetImage();
    }

    string tempImage[4][100];

    void SetImage()
    {
        for (int i = 0; i < 4; i++)
        {
            for (int j = 0; j < 100; j++)
            {
                if ((FlowerCount + i) == 8) {
                    image[i][j] = Lgreen"■";
                    FlowerCount = 0;
                }
                else {
                    image[i][j] = Green"■";
                    FlowerCount++;
                }
            }
        }
    }

    void setActive(bool b) {
        Active = b;
    }

    void Render(Scene& s) {
        for (int i = 0; i < Height; i++)
        {
            if ((Y + i) < 39)
            {
                for (int j = 0; j < Width; j++)
                {
                    if (0 <= (X + j) && (X + j) < 100)
                    {
                        if (image[i][j] != "  ")
                        {
                            s.ScreenBuffer[Y + i][X + j] = image[i][j];
                        }
                    }
                }
            }
        }
    }

    void MoveGround() {
        for (int i = 0; i < Height; i++)
        {
            for (int j = 0; j < Width; j++)
            {
                tempImage[i][j] = image[i][j];
            }
        }

        for (int i = 0; i < Height; i++)
        {
            for (int j = 0; j < (Width - 1); j++)
            {
                image[i][j] = tempImage[i][j + 1];
            }
        }

        for (int i = 0; i < Height; i++)
        {
            image[i][99] = tempImage[i][0];
        }
    }
};

class Sword : public Object {
public:
    int MoveSpeed;
    int MoveCount;
    bool IsFalling;

    string defaultimage[12][1] = {
        {Red"■" Reset},
        {BgRed TextWhite"◆" Reset},
        {BgRed TextWhite"◆" Reset},
        {BgRed TextWhite"◆" Reset},
        {Yellow"  " Reset},
        {White"  " Reset},
        {White"  " Reset},
        {White"  " Reset},
        {White"  " Reset},
        {White"  " Reset},
        {White"  " Reset},
        {White"  " Reset}
    };

    Sword(int x, int y, int width, int height, bool isfalling) : Object(width, height) {
        X = x;
        Y = y;
        Active = true;
        Width = width;
        Height = height;
        IsFalling = isfalling;
        ImagePaste();
    }

    void ImagePaste() {
        for (int i = 0; i < 12; i++) {
            image[i][0] = defaultimage[i][0];
        }
    }

    void Render(Scene& s) {
        for (int i = 0; i < Height; i++) {
            if ((Y + i) < 39) {
                for (int j = 0; j < Width; j++) {
                    if (0 <= (X + j) && (X + j) < 100) {
                        if (image[i][j] != "  ") {
                            s.ScreenBuffer[Y + i][X + j] = image[i][j];
                        }
                    }
                }
            }
        }
    }

    void MoveSword() {
        if (IsFalling == false)
        {
            X--;
            if (X + Width < 0) {
                X = 100;
            }
        }
    }

    void FallingSword() {
        if (IsFalling == true)
        {
            Y++;
            if (Y > 26)
            {
                IsFalling = false;
            }
        }
    }
};

class StartUI : public Object
{
public:


    string defaultimage[30][80] = {
        {"□","□","□","□","□","□","  ","□","□","  ","  ","  ","  ","  ","□","□","□","□","□","□","  ","□","□","  ","  ","  ","□","□","  ","□","□","□","□","□","□","  ","  ","□","□","□","□","□","□","  ","□","□","  ","  ","□","□","  ","□","□","  ","  ","  ","□","□","  ","□","□","  ","  ","  ","□","□","  ","□","□","□","□","□","□","  ","□","□","□","□","□","□"},

        {"□","■","■","■","■","■","  ","□","■","  ","  ","  ","  ","  ","□","■","■","■","■","■","  ","□","■","□","  ","□","■","■","  ","□","■","■","■","■","■","  ","  ","□","■","■","■","■","■","  ","□","■","  ","  ","□","■","  ","□","■","■","  ","  ","□","■","  ","□","■","■","  ","  ","□","■","  ","□","■","■","■","■","■","  ","□","■","■","■","■","■"},

        {"□","■","  ","  ","  ","  ","  ","□","■","  ","  ","  ","  ","  ","  ","  ","□","■","  ","  ","  ","□","■","■","□","■","■","■","  ","□","■","  ","  ","  ","  ","  ","  ","□","■","  ","  ","□","■","  ","□","■","  ","  ","□","■","  ","□","■","■","  ","  ","□","■","  ","□","■","■","  ","  ","□","■","  ","□","■","  ","  ","  ","  ","  ","□","■","  ","  ","□","■"},

        {"□","■","  ","  ","  ","  ","  ","□","■","  ","  ","  ","  ","  ","  ","  ","□","■","  ","  ","  ","□","■","■","■","■","■","■","  ","□","■","  ","  ","  ","  ","  ","  ","□","■","  ","  ","□","■","  ","□","■","  ","  ","□","■","  ","□","■","■","■","  ","□","■","  ","□","■","■","■","  ","□","■","  ","□","■","  ","  ","  ","  ","  ","□","■","  ","  ","□","■"},

        {"□","■","□","□","□","□","  ","□","■","  ","  ","  ","  ","  ","  ","  ","□","■","  ","  ","  ","□","■","  ","■","  ","□","■","  ","□","■","□","□","□","□","  ","  ","□","■","□","□","□","■","  ","□","■","  ","  ","□","■","  ","□","■","■","■","  ","□","■","  ","□","■","■","■","  ","□","■","  ","□","■","□","□","□","□","  ","□","■","□","□","□","■"},

        {"□","■","■","■","■","■","  ","□","■","  ","  ","  ","  ","  ","  ","  ","□","■","  ","  ","  ","□","■","  ","  ","  ","□","■","  ","□","■","■","■","■","■","  ","  ","□","■","■","■","■","■","  ","□","■","  ","  ","□","■","  ","□","■","  ","■","■","■","■","  ","□","■","  ","■","■","■","■","  ","□","■","■","■","■","■","  ","□","■","■","■","■","■"},

        {"  ","  ","  ","  ","□","■","  ","□","■","  ","  ","  ","  ","  ","  ","  ","□","■","  ","  ","  ","□","■","  ","  ","  ","□","■","  ","□","■","  ","  ","  ","  ","  ","  ","□","■","  ","■","■","  ","  ","□","■","  ","  ","□","■","  ","□","■","  ","□","■","■","■","  ","□","■","  ","□","■","■","■","  ","□","■","  ","  ","  ","  ","  ","□","■","  ","■","■","  "},

        {"  ","  ","  ","  ","□","■","  ","□","■","  ","  ","  ","  ","  ","  ","  ","□","■","  ","  ","  ","□","■","  ","  ","  ","□","■","  ","□","■","  ","  ","  ","  ","  ","  ","□","■","  ","■","■","  ","  ","□","■","  ","  ","□","■","  ","□","■","  ","  ","□","■","■","  ","□","■","  ","  ","□","■","■","  ","□","■","  ","  ","  ","  ","  ","□","■","  ","■","■","  "},

        {"□","□","□","□","□","■","  ","□","■","□","□","□","□","  ","□","□","□","■","□","□","  ","□","■","  ","  ","  ","□","■","  ","□","■","□","□","□","□","  ","  ","□","■","  ","  ","■","□","  ","□","■","□","□","□","■","  ","□","■","  ","  ","□","■","■","  ","□","■","  ","  ","□","■","■","  ","□","■","□","□","□","□","  ","□","■","  ","  ","■","□"},

        {"□","■","■","■","■","■","  ","□","■","■","■","■","■","  ","□","■","■","■","■","■","  ","□","■","  ","  ","  ","□","■","  ","□","■","■","■","■","■","  ","  ","□","■","  ","  ","■","■","  ","□","■","■","■","■","■","  ","□","■","  ","  ","  ","□","■","  ","□","■","  ","  ","  ","□","■","  ","□","■","■","■","■","■","  ","□","■","  ","  ","■","■"},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","□","□","□","  ","□","□","□","  ","  ","□","  ","  ","□","□","  ","  ","□","□","□","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","□","□","□","  ","□","  ","□","  ","□","  ","  ","  ","□","□","□","  ","□","□","□","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","□","  ","  ","  ","  ","□","  ","  ","□","  ","□","  ","□","  ","□","  ","  ","□","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","□","  ","□","  ","□","  ","□","  ","□","  ","  ","  ","□","  ","  ","  ","□","  ","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","□","□","□","  ","  ","□","  ","  ","□","□","□","  ","□","□","  ","  ","  ","□","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","□","□","  ","  ","□","  ","□","  ","□","  ","  ","  ","□","□","□","  ","□","□","□","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","  ","  ","□","  ","  ","□","  ","  ","□","  ","□","  ","□","  ","□","  ","  ","□","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","□","  ","□","  ","□","  ","□","  ","□","  ","  ","  ","□","  ","  ","  ","  ","  ","□","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","□","□","□","  ","  ","□","  ","  ","□","  ","□","  ","□","  ","□","  ","  ","□","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","□","  ","□","  ","□","□","□","  ","□","□","□","  ","□","□","□","  ","□","□","□","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","□","□","□","  ","□","  ","  ","  ","□","□","□","  ","□","□","□","  ","□","□","□","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","□","□","  ","  ","  ","□","  ","  ","□","  ","□","  ","□","  ","□","  ","□","□","□","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","□","  ","  ","  ","□","  ","  ","  ","□","  ","□","  ","□","  ","  ","  ","□","  ","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","□","  ","□","  ","□","  ","□","  ","□"," " Reset" ","□","  ","□","  ","□","  ","□","  ","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","□","  ","  ","  ","□","  ","  ","  ","□","  ","□","  ","□","□","□","  ","□","□","□","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","□","□","  ","  ","□","□","□","  ","□","□","□","  ","□","□","  ","  ","□","□","□","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","□","  ","  ","  ","□","  ","  ","  ","□","  ","□","  ","  ","  ","□","  ","□","  ","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","□","  ","□","  ","□","  ","□","  ","□",Reset" " White" ","□","  ","□","  ","□","  ","  ","  ","□","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","□","□","□","  ","□","□","□","  ","□","□","□","  ","□","□","□","  ","□","□","□","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","□","  ","□","  ","□","  ","□","  ","□","  ","□","  ","□","  ","□","  ","□","□","□","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "}

    };

    StartUI(int x, int y, int width, int height) : Object(width, height) {
        X = x;
        Y = y;
        Active = true;
        Width = width;
        Height = height;
        ImagePaste();
    }

    void ImagePaste() {
        for (int i = 0; i < 30; i++) {
            for (int j = 0; j < 80; j++) {
                if (defaultimage[i][j] == "■")
                {
                    if (j == 79)
                    {
                        defaultimage[i][j] = Lmint"■" Reset;
                    }
                    else {
                        defaultimage[i][j] = Lmint"■";
                    }
                }
                else if (defaultimage[i][j] == "▤") {
                    defaultimage[i][j] = Lgray"▤";
                }
                else if (defaultimage[i][j] == "□") {
                    if (j == 79)
                    {
                        defaultimage[i][j] = White"□" Reset;
                    }
                    else {
                        defaultimage[i][j] = White"□";
                    }
                }
                if (j < 79 && defaultimage[i][j + 1] == "  " && defaultimage[i][j] != "  ")
                {
                    defaultimage[i][j] += Reset;
                }
                image[i][j] = defaultimage[i][j];
            }
        }
    }

    void setActive(bool b) {
        Active = b;
    }

    void Render(Scene& s) {
        for (int i = 0; i < Height; i++) {
            if ((Y + i) < 39) {
                for (int j = 0; j < Width; j++) {
                    if (0 <= (X + j) && (X + j) < 100) {
                        if (image[i][j] != "  ") {
                            s.ScreenBuffer[Y + i][X + j] = image[i][j];
                        }
                    }
                }
            }
        }
    }
};

class Arrow : public Object
{
public:

    bool UpDown;
    bool LeftRight;

    Arrow(int x, int y, int width, int height) : Object(width, height) {
        X = x;
        Y = y;
        Active = true;
        Width = width;
        Height = height;
        UpDown = true;
        LeftRight = true;
        ImagePaste();
    }

    string LeftArrow[7][7] = {
        {"  ","  ","  ","  ","  ","□","□",},

        {"  ","  ","  ","□","□","  ","  ",},

        {"  ","□","□","  ","  ","  ","  ",},

        {"□","  ","  ","  ","  ","  ","  ",},

        {"  ","□","□","  ","  ","  ","  ",},

        {"  ","  ","  ","□","□","  ","  ",},

        {"  ","  ","  ","  ","  ","□","□",},
    };

    string RightArrow[7][7] = {
        {"□","□","  ","  ","  ","  ","  ",},

        {"  ","  ","□","□","  ","  ","  ",},

        {"  ","  ","  ","  ","□","□","  ",},

        {"  ","  ","  ","  ","  ","  ","□",},

        {"  ","  ","  ","  ","□","□","  ",},

        {"  ","  ","□","□","  ","  ","  ",},

        {"□","□","  ","  ","  ","  ","  ",},
    };



    void ImagePaste() {

        if (LeftRight == true)
        {
            for (int i = 0; i < 7; i++) {
                for (int j = 0; j < 7; j++) {
                    if (LeftArrow[i][j] == "□")
                    {
                        if (j == 6)
                        {
                            LeftArrow[i][j] = White"□" Reset;
                        }
                        else {
                            LeftArrow[i][j] = White"□";
                        }
                    }
                    if (j < 6 && LeftArrow[i][j + 1] == "  " && LeftArrow[i][j] != "  ")
                    {
                        LeftArrow[i][j] += Reset;
                    }
                    image[i][j] = LeftArrow[i][j];
                }
            }
        }
        else if (LeftRight == false)
        {
            for (int i = 0; i < 7; i++) {
                for (int j = 0; j < 7; j++) {
                    if (RightArrow[i][j] == "□")
                    {
                        if (j == 6)
                        {
                            RightArrow[i][j] = White"□" Reset;
                        }
                        else {
                            RightArrow[i][j] = White"□";
                        }
                    }
                    if (j < 6 && RightArrow[i][j + 1] == "  " && RightArrow[i][j] != "  ")
                    {
                        RightArrow[i][j] += Reset;
                    }
                    image[i][j] = RightArrow[i][j];
                }
            }
        }
    }

    void setActive(bool b) {
        Active = b;
    }

    void Render(Scene& s) {
        for (int i = 0; i < Height; i++) {
            if ((Y + i) < 39) {
                for (int j = 0; j < Width; j++) {
                    if (0 <= (X + j) && (X + j) < 100) {
                        if (image[i][j] != "  ") {
                            s.ScreenBuffer[Y + i][X + j] = image[i][j];
                        }
                    }
                }
            }
        }
    }
};

class Rules : public Object
{
public:
    Rules(int x, int y, int width, int height) : Object(width, height)
    {
        X = x;
        Y = y;
        Active = false;
        Width = width;
        Height = height;
        ImagePaste();
    }

    string defaultimage[30][40] = {
        {"■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■"},

        {"■","■","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","■","■"},

        {"■","▤","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▤","■"},

        {"■","▤","▣","□","□","□","□","□","□","▣","□","□","▣","▣","□","□","▣","□","□","▣","▣","▣","▣","▣","□","□","□","□","□","□","▣","□","□","□","□","□","□","▣","▤","■"},
        
        {"■","▤","▣","□","□","□","□","□","□","▣","□","□","▣","▣","□","□","▣","□","□","▣","▣","▣","▣","▣","□","□","□","□","□","□","▣","□","□","□","□","□","□","▣","▤","■"},
        
        {"■","▤","▣","□","□","▣","▣","□","□","▣","□","□","▣","▣","□","□","▣","□","□","▣","▣","▣","▣","▣","□","□","▣","▣","▣","▣","▣","□","□","▣","▣","▣","▣","▣","▤","■"},
           
        {"■","▤","▣","□","□","▣","▣","□","□","▣","□","□","▣","▣","□","□","▣","□","□","▣","▣","▣","▣","▣","□","□","▣","▣","▣","▣","▣","□","□","▣","▣","▣","▣","▣","▤","■"},
        
        {"■","▤","▣","□","□","□","□","□","□","▣","□","□","▣","▣","□","□","▣","□","□","▣","▣","▣","▣","▣","□","□","□","□","□","□","▣","□","□","□","□","□","□","▣","▤","■"},
        
        {"■","▤","▣","□","□","□","□","□","□","▣","□","□","▣","▣","□","□","▣","□","□","▣","▣","▣","▣","▣","□","□","□","□","□","□","▣","□","□","□","□","□","□","▣","▤","■"},
        
        {"■","▤","▣","□","□","▣","□","□","▣","▣","□","□","▣","▣","□","□","▣","□","□","▣","▣","▣","▣","▣","□","□","▣","▣","▣","▣","▣","▣","▣","▣","▣","□","□","▣","▤","■"},
        
        {"■","▤","▣","□","□","▣","□","□","▣","▣","□","□","▣","▣","□","□","▣","□","□","▣","▣","▣","▣","▣","□","□","▣","▣","▣","▣","▣","▣","▣","▣","▣","□","□","▣","▤","■"},
        
        {"■","▤","▣","□","□","▣","▣","□","□","▣","□","□","□","□","□","□","▣","□","□","□","□","□","□","▣","□","□","□","□","□","□","▣","□","□","□","□","□","□","▣","▤","■"},
        
        {"■","▤","▣","□","□","▣","▣","□","□","▣","□","□","□","□","□","□","▣","□","□","□","□","□","□","▣","□","□","□","□","□","□","▣","□","□","□","□","□","□","▣","▤","■"},
        
        {"■","▤","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▤","■"},
        
        {"■","▤","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▤","■"},
        
        {"■","▤","▣",Text"1.","▣",Text"스","페","이","스","바","를","▣",Text"누","를","▣",Text"시","▣",Text"점","프","합","니","다",". ","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▤","■"},
        
        {"■","▤","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▤","■"},
        
        {"■","▤","▣",Text"2.","▣",Text"P,"," p","를","▣",Text"누","를","▣",Text"시","▣",Text"일","시","▣",Text"정","지","되","며","▣",Text"다","시","▣",Text"누","를","▣",Text"시","▣","▣","▣","▣","▣","▣","▣","▣","▣","▤","■"},
        
        {"■","▤","▣","▣","▣",Text"3 ","초","▣",Text"뒤","▣",Text"다","시","▣",Text"시","작","합","니","다",". ","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▤","■"},
        
        {"■","▤","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▤","■"},
        
        {"■","▤","▣",Text"3.","▣",Text"장","애","물","에","▣",Text"맞","으","면","▣",Text"죽","습","니","다",". ","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▤","■"},
        
        {"■","▤","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▤","■"},

        {"■","▤","▣",Text"4.","▣",Text"점","수","가","▣",Text"올","라","갈","수","록","▣",Text"속","도","가","▣",Text"빨","라","집","니","다",". ","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▤","■"},

        {"■","▤","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▤","■"},
        
        {"■","▤","▣",Text"P.","S.","▣",Text"이","▣",Text"창","은","▣",Text"엔","터","키","를","▣",Text"누","르","면","▣",Text"닫","힙","니","다",". ","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▤","■"},

        {"■","▤","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▤","■"},
        
        {"■","▤","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▤","■"},
        
        {"■","▤","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▤","■"},
        
        {"■","■","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","■","■"},

        {"■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■"}
    };

    void ImagePaste() {
        for (int i = 0; i < 30; i++) {
            for (int j = 0; j < 40; j++) {
                if (defaultimage[i][j] == "■")
                {
                    if (j == 39)
                    {
                        defaultimage[i][j] = Gray"■" Reset;
                    }
                    else {
                        defaultimage[i][j] = Gray"■";
                    }
                }
                else if (defaultimage[i][j] == "▤") {
                    defaultimage[i][j] = Lgray"▤";
                }
                else if (defaultimage[i][j] == "▣") {
                    defaultimage[i][j] = White"▣";
                }
                else if (defaultimage[i][j] == "□") {
                    defaultimage[i][j] = Black"□";
                }
                if (j < 39 && defaultimage[i][j + 1] == "  " && defaultimage[i][j] != "  ")
                {
                    defaultimage[i][j] += Reset;
                }
                image[i][j] = defaultimage[i][j];
            }
        }
    }

    void setActive(bool b) {
        Active = b;
    }

    void Render(Scene& s) {
        for (int i = 0; i < Height; i++) {
            if ((Y + i) < 39) {
                for (int j = 0; j < Width; j++) {
                    if (0 <= (X + j) && (X + j) < 100) {
                        if (image[i][j] != "  ") {
                            s.ScreenBuffer[Y + i][X + j] = image[i][j];
                        }
                    }
                }
            }
        }
    }

};

class Player : public Object
{

public:
    int MoveCount;
    bool IsJump;
    bool IsFalling;
    int JumpCount;
    int ObjectYDefault;

    Player(int x, int y, int width, int height) : Object(width, height) {
        X = x;
        Y = y;
        ObjectYDefault = y;
        Active = true;
        MoveCount = 0;
        JumpCount = 0;
        IsFalling = false;
        IsJump = false;
        Width = width;
        Height = height;
        ImagePaste();
    }

    string defaultimage[10][10] = {
        {"  ","  ","  ","  ",Lmint"■" Reset,"  ","  ","  ","  ","  "},
        {"  ","  ","  ",Lmint"■",Lmint"■" Reset,"  ","  ","  ","  ","  "},
        {"  ","  ",Lmint"■",Lmint"■",Lmint"■",Lmint"■" Reset,"  ","  ","  ","  "},
        {"  ",White"■",White"■",Lmint"■",Lmint"■",Lmint"■",Mint"■",Mint"■" Reset,"  ","  "},
        {Lmint"■",White"■",White"■",Lmint"■",Lmint"■",Lmint"■",Lmint"■",Mint"■",Mint"■" Reset,"  "},
        {Lmint"■",Lmint"■",Lmint"■",TextWhite BgBlack"▣",Lmint"■",Lmint"■",Lmint"■",TextWhite BgBlack"▣",Mint"■",Lblue"■" Reset},
        {Lmint"■",White"■",Lmint"■",Lmint"■",Lmint"■",TextBlack BgLmint"▲",Lmint"■",Lmint"■",Mint"■",Lblue"■" Reset},
        {Lmint"■",Lmint"■",Lmint"■",Lmint"■",Lmint"■",Lmint"■",Lmint"■",Mint"■",Lblue"■",White"■" Reset},
        {"  ",Lmint"■",Lmint"■",Lmint"■",Mint"■",Mint"■",Mint"■",Lblue"■",White"■" Reset,"  "},
        {"  ","  ",Mint"■",Mint"■",Lblue"■",Lblue"■",Lblue"■" Reset,"  ","  ","  "}
    };

    void Render(Scene& s) {
        for (int i = 0; i < Height; i++)
        {
            for (int j = 0; j < Width; j++)
            {
                if (image[i][j] != "  ")
                {
                    s.ScreenBuffer[Y + i][X + j] = image[i][j];
                }
            }
        }
    }

    void ImagePaste() {
        for (int i = 0; i < Height; i++) {
            for (int j = 0; j < Width; j++) {
                image[i][j] = defaultimage[i][j];
            }
        }
    }

    void MovePlayer() {
        if (IsJump == false) {
            if (MoveCount < 2) {
                Y++;
                MoveCount++;
            }
            else {
                Y--;
                MoveCount++;
                if (MoveCount >= 4)
                {
                    MoveCount = 0;
                }
            }
        }
        else {
            MoveCount = 0;
        }
    }

    void JumpPlayer() {
        if (IsJump == true) {
            if (IsFalling == false) {
                Y--;
                JumpCount++;
                if (JumpCount >= 15)
                {
                    IsFalling = true;
                }
            }
            else if (IsFalling == true) {
                Y++;
                JumpCount--;
                if (JumpCount <= 1)
                {
                    IsFalling = false;
                    IsJump = false;
                    Y = ObjectYDefault;
                }
            }
        }
    }

    void Collider(Sword& sw) { // 교체
        if (sw.X >= X && sw.X <= X + 10)
        {
            if ((Y + 9) >= 27)
            {
                exit(0);
            }
        }
    }
};

int main() {
    ios::sync_with_stdio(false); // 표준 입출력 가속화
    cin.tie(NULL);
    cout.tie(NULL);
    system("mode con cols=200 lines=40");

    Utility u;
    Scene s;
    Scene MainScene;

    Player p(5, 23, 10, 10);

    Cloud c1(30, 5, 15, 8, 1);
    Cloud c2(70, 8, 15, 8, 2);
    Cloud c3(10, 10, 15, 8, 3);

    Ground g(100, 4);

    Mountain m(20, 13, 46, 22);

    Sword sw(90, 1, 1, 12, true);

    StartUI startui(10, 5, 80, 30);
    Arrow a(46, 17, 7, 7);
    Rules r(30, 5, 40, 30);

    int speed = 1;
    int score = 0;
    bool IsStart = false;
    bool pause = false;

    s.AddObject(m);
    s.AddObject(c1);
    s.AddObject(c2);
    s.AddObject(c3);
    s.AddObject(sw);
    s.AddObject(g);
    s.AddObject(p);

    MainScene.AddObject(startui);
    MainScene.AddObject(a);
    MainScene.AddObject(r);

    while (true) {
        if (IsStart == true)
        {
            u.gotoxy(0, 0);

            auto startTime = chrono::high_resolution_clock::now();

            s.ClearScreenBuf();
            if (_kbhit()) {
                char key = _getch();
                if (key == ' ') {
                    p.IsJump = true;
                }
                else if (key == 80 || key == 112)
                {
                    pause = true;
                }
            }

            p.JumpPlayer();
            p.MovePlayer();
            c1.MoveCloud();
            c2.MoveCloud();
            c3.MoveCloud();
            m.MoveMountain();
            g.MoveGround();
            sw.MoveSword();
            sw.FallingSword();

            s.Draw();
            cout << "점수 : " << score << " , 속도 : " << speed;
            p.Collider(sw);

            auto endTime = chrono::high_resolution_clock::now();

            chrono::duration<double> elapsedTime = endTime - startTime;

            double targetFrameTime = 1.0 / 60;

            double sleepTime = targetFrameTime - elapsedTime.count();
            if (sleepTime > 0)
            {
                this_thread::sleep_for(chrono::duration<double>(sleepTime));
            }

            if (pause == true)
            {
                while (pause)
                {
                    if (_kbhit()) {
                        char key = _getch();
                        if (key == 80 || key == 112)
                        {
                            pause = false;
                            Sleep(3000);
                        }
                    }
                }
            }

            score++;
            if (score % 100 == 0) {
                speed++;
            }
        }
        else if (IsStart == false)
        {
            u.gotoxy(0, 0);

            auto startTime = chrono::high_resolution_clock::now();

            MainScene.ClearScreenBuf();

            if (_kbhit()) {
                char key = _getch();
                if (key == 80 && a.UpDown == true) {
                    a.Y += 10;
                    a.UpDown = false;
                }
                else if (key == 72 && a.UpDown == false)
                {
                    a.Y -= 10;
                    a.UpDown = true;
                }
                else if (key == 13 && a.UpDown == false && a.LeftRight == true)
                {
                    return 0;
                }
                else if (key == 13 && a.UpDown == true && a.LeftRight == true)
                {
                    IsStart = true;
                }
                else if (key == 13 && a.LeftRight == false && a.UpDown == false )
                {
                    //랭킹보드 active
                }
                else if (key == 13 && a.LeftRight == false && a.UpDown == true )
                {
                    if (r.Active == false)
                    {
                        r.setActive(true);
                    }
                    else {
                        r.setActive(false);
                    }
                }
                else if (key == 75 && a.LeftRight == false)
                {
                    a.LeftRight = true;
                    a.ImagePaste();
                }
                else if (key == 77 && a.LeftRight == true)
                {
                    a.LeftRight = false;
                    a.ImagePaste();
                }
            }
            MainScene.Draw();

            auto endTime = chrono::high_resolution_clock::now();

            chrono::duration<double> elapsedTime = endTime - startTime;

            double targetFrameTime = 1.0 / 60;

            double sleepTime = targetFrameTime - elapsedTime.count();
            if (sleepTime > 0)
            {
                this_thread::sleep_for(chrono::duration<double>(sleepTime));
            }
        }
    }
    return 0;
}
