#include <iostream>
#include <string>
#include <conio.h>
#include <windows.h>
#include <sstream>
#include <vector>
#include <thread>
#include <chrono>
#include "Colors.hpp"
#include <fstream>

using namespace std;

void gotoxy(int x, int y) { // 커서 위치 이동용

        COORD Pos = { x,y };
        //커서 이동
        SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), Pos);

        CONSOLE_CURSOR_INFO ConsoleCursor;
        ConsoleCursor.bVisible = false;
        ConsoleCursor.dwSize = 1;
        SetConsoleCursorInfo(GetStdHandle(STD_OUTPUT_HANDLE), &ConsoleCursor);
}


class Scene;

class Object {

public:

    int X;//오브젝트의 좌측 상단 좌표
    int Y;
    int DefaultX;
    int DefaultY;
    int Width; //가로
    int Height; //세로
    bool Active;//이 오브젝트가 그려지는지 안그려지는지

    //오브젝트 이미지
    string** Image;

    //가로세로 값을 받아서 이미지 동적할당
    Object(int width, int height) {
        X = 0;
        Y = 0;
        Active = true;
        Width = width;
        Height = height;

        Image = new string * [Height];
        for (int i = 0; i < Height; i++) {
            Image[i] = new string[Width];
        }
    }

    //소멸자에서 할당된 메모리 해제
    ~Object() {
        for (int i = 0; i < Height; i++) {
            delete[] Image[i];
        }
        delete[] Image;
    }

    virtual void Render(Scene& s) {}

    virtual void ImagePaste() {}

    virtual void ResetPos() {}
};

class Scene {

public:

    string Output; // 출력용
    string ScreenBuffer[39][100]; // x 100, y 40
    vector<Object*> Objects;

    Scene() {
        Output = "";
        ClearScreenBuf();
    }

    // Active한 Object의 Render를 호출해 ScreenBuffer에 저장하고 ScreenBuffer 출력
    void Draw() {
        for (Object* obj : Objects) {
            if (obj->Active == true) {
                obj->Render(*this);
            }
        }
        Output = "";
        for (int i = 0; i < 39; i++) {
            for (int j = 0; j < 100; j++) {
                Output += ScreenBuffer[i][j];
            }
            Output += Reset"\n";
        }
        cout << Output;
        cout.flush();
    }

    // ScreenBuffer에 저장된 Object를 지워 ScreenBuffer를 초기화
    void ClearScreenBuf() {
        for (int i = 0; i < 39; i++) {
            for (int j = 0; j < 100; j++) {
                ScreenBuffer[i][j] = "  ";
            }
        }
    }

    void ResetObject() {
        for (Object* obj : Objects) {
            if (obj->Active == true) {
                obj->ResetPos();
            }
        }
    }

    //object벡터에 오브젝트추가하는 함수
    void AddObject(Object& o) {
        Objects.push_back(&o);
    }
};


class Cloud : public Object {
public:
    int MoveCount;
    int MoveSpeed;

    Cloud(int x, int y, int width, int height, int speed) : Object(width, height) {
        X = x;
        Y = y;
        DefaultX = x;
        DefaultY = y;
        Width = width;
        Height = height;
        MoveSpeed = speed;
        Active = true;
        MoveCount = 0;
        ImagePaste();
    }

    string DefaultImage[7][15] = {
        {"  ","  ","  ","  ","  ","  ","■","■","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","■","■","  ","■","■","■","■","  ","  ","▦","■","  ","  "},

        {"  ","■","■","■","■","■","■","■","■","  ","▦","■","■",White "■" Reset,"  "},

        {"  ","■","■","■","▦","■","■","■","■","▦","■","■","■","■",White "■" Reset},

        {"▦","▦","■","▦","▦","■","■","■","▦","▦","▦","■","■","■",Lgray"▦" Reset},

        {"▦","▦","▦","▦","▦","▦","▦","▦","▦","▦","▦","▦","▦","▦",Lgray "▦" Reset},

        {"  ","▦","▦","▦","▦","▦","▦","▦","▦","▦","▦","▦","▦",Lgray"▦" Reset,"  "}
    };

    void setActive(bool b) {
        Active = b;
    }
    
    void ResetPos() {
        X = DefaultX;
        Y = DefaultY;
        Active = true;
        MoveCount = 0;
    }

    void Render(Scene& s) {
        for (int i = 0; i < Height; i++) {
            if ((Y + i) < 39) {
                for (int j = 0; j < Width; j++) {
                    if (0 <= (X + j) && (X + j) < 100) {
                        if (Image[i][j] != "  ") {
                            s.ScreenBuffer[Y + i][X + j] = Image[i][j];
                        }
                    }
                }
            }
        }
    }

    void ImagePaste() {
        for (int i = 0; i < 7; i++) {
            for (int j = 0; j < 15; j++) {
                if (DefaultImage[i][j] == "■") {
                    if (j < 14 && DefaultImage[i][j + 1] == "  ")
                    {
                        DefaultImage[i][j] = White"■" Reset;
                    }
                    else
                    {
                        DefaultImage[i][j] = White"■";
                    }
                } else if (DefaultImage[i][j] == "▦") {
                    if (j < 14 && DefaultImage[i][j + 1] == "  ")
                    {
                        DefaultImage[i][j] = Lgray"▦" Reset;
                    }
                    else
                    {
                        DefaultImage[i][j] = Lgray"▦";
                    }
                }
                Image[i][j] = DefaultImage[i][j];
            }
        }
    }

    void MoveCloud() {
        if (MoveCount == MoveSpeed) {
            X--;
            if (X + Width < 0) {
                X = 100;
            }
            MoveCount = 0;
        } else {
            MoveCount++;
        }
    }
};

class Mountain : public Object {
public:
    int MoveCount;
    int MoveSpeed;

    Mountain(int x, int y, int width, int height) : Object(width, height) {
        X = x;
        Y = y;
        DefaultX = x;
        DefaultY = y;
        Active = true;
        MoveCount = 0;
        Width = width;
        Height = height;
        MoveSpeed = 100;
        ImagePaste();
    }

    string DefaultImage[22][46] = {

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▣","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","■","▣","▣","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","■","■","▣","▣","▧","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","■","■","■","▣","▧","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","■","■","■","▣","▣","▧","  ","  ","  ","▣","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","■","■","■","▣","▣","▣","▧","▧","  ","■","■","▣","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","■","■","■","■","▣","▣","▣","▣","▧","■","■","■","▣","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","■","■","■","▣","▣","▣","▣","▣","▧","▧","■","■","▣","▣","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","■","■","■","■","▣","▣","▣","▣","▣","▣","▧","▧","▣","▣","▣","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","■","■","■","■","▣","▣","▣","▣","▣","▣","▣","▧","▧","▧","▣","▣","▧","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","■","■","■","■","■","▣","▣","▣","■","▣","▣","▣","▣","▧","▧","▧","▧","▣","▧","  ","  ","  ","  ","  ","  ","■","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","■","■","■","■","■","■","▣","▣","▣","■","▣","▣","▣","▣","▣","▧","▧","▧","▧","▧","▧","  ","  ","  ","  ","■","■","▣","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","■","■","■","■","■","▣","▣","▣","■","▣","▣","▣","▣","▣","▣","▧","▧","▧","▧","▧","▧","▧","  ","  ","■","■","▣","▣","▣","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","■","■","■","■","■","▣","▣","■","▣","▣","▣","▣","▣","▣","▣","▣","▧","▧","▧","▧","▧","▧","▧","■","■","■","▣","▣","▣","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","■","■","■","■","■","▣","▣","■","■","▣","▣","▣","▣","▣","▧","▣","▣","▣","▧","▧","▧","▧","■","■","■","■","▣","▣","▣","▧","▧","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","■","■","■","■","■","■","▣","▣","■","■","▣","▣","▧","▣","▣","▧","▧","▣","▣","▣","▧","▧","▧","■","■","■","■","▣","▣","▣","▧","▧","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","■","■","■","▣","■","▣","▣","■","■","■","▣","▣","▧","▧","▣","▣","▧","▧","▧","▣","▧","▧","■","■","■","■","■","▣","▣","▣","▧","▧","▧","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","■","■","▣","■","▣","▣","■","■","■","■","▣","▣","▣","▧","▧","▣","▧","▧","▧","▧","▧","■","■","▣","▣","■","▣","▣","▣","▧","▧","▧","▧","▧","▧","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","■","■","▣","■","▣","▣","■","■","■","■","▣","▣","▣","▣","▧","▧","▧","▧","▧","▧","▧","■","■","▧","▣","▣","■","▣","▣","▣","▧","▧","▧","▧","▧","▧","▧","  ","  "},

        {"  ","  ","  ","  ","  ","  ","■","▣","▣","▧","■","■","■","■","■","■","■","▣","▣","▣","▣","▣","▧","▧","▧","▧","▧","■","▧","▧","▧","▣","■","▣","▣","▣","▧","▧","▧","▧","▣","▧","▧","▧","▧","  "},

        {"  ","  ","  ","  ","■","■","▣","▣","▧","▧","▣","■","■","■","■","■","▣","▣","▣","▣","▣","▣","▧","▧","▧","▧","■","▧","▧","▧","▣","▣","▣","▣","▣","▧","▧","▧","▣","▧","▣","▣","▧","▧","▧","  "},

        {"■","■","■","■","▣","▣","▣","▧","▧","▧","▣","▣","■","■","■","▣","▣","▣","▣","▣","▣","▧","▧","▧","▧","▧","▧","▧","▧","▣","▣","▣","▣","▣","▧","▧","▧","▣","▣","▧","▣","▣","▣","▧","▧","  "}

    };

    void setActive(bool b) {
        Active = b;
    }

    void ResetPos() {
        X = DefaultX;
        Y = DefaultY;
        Active = true;
        MoveCount = 0;
    }

    void Render(Scene& s) {
        for (int i = 0; i < Height; i++) {
            if ((Y + i) < 39) {
                for (int j = 0; j < Width; j++) {
                    if (0 <= (X + j) && (X + j) < 100 && Image[i][j] != "  ") {
                        s.ScreenBuffer[Y + i][X + j] = Image[i][j];
                    }
                }
            }
        }
    }

    void ImagePaste() {
        for (int i = 0; i < 22; i++) {
            for (int j = 0; j < 46; j++) {
                if (DefaultImage[i][j] == "■") {
                    if (j < 45 && DefaultImage[i][j + 1] == "  ")
                    {
                        DefaultImage[i][j] = White"■" Reset;
                    }
                    else
                    {
                        DefaultImage[i][j] = White"■";
                    }
                } else if (DefaultImage[i][j] == "▣") {
                    if (j < 45 && DefaultImage[i][j + 1] == "  ")
                    {
                        DefaultImage[i][j] = Lgray"▣" Reset;
                    }
                    else
                    {
                        DefaultImage[i][j] = Lgray"▣";
                    }
                } else if (DefaultImage[i][j] == "▧") {
                    if (j < 45 && DefaultImage[i][j + 1] == "  ")
                    {
                        DefaultImage[i][j] = Gray"▧" Reset;
                    }
                    else
                    {
                        DefaultImage[i][j] = Gray"▧";
                    }
                } 
                Image[i][j] = DefaultImage[i][j];
            } 
        }
    }

    void MoveMountain() {
        if (MoveCount == MoveSpeed) {
            X--;
            if (X + Width < 0) {
                X = 100;
            }
            MoveCount = 0;
        } else {
            MoveCount++;
        }
    }
};

class Ground : public Object {

public:
    int FlowerCount;

    Ground(int width, int height) : Object(width, height) {
        X = 0;
        Y = 35;
        DefaultX = 0;
        DefaultY = 35;
        Active = true;
        FlowerCount = 0;
        Width = width;
        Height = height;
        SetImage();
    }

    string tempImage[4][100];

    void SetImage() {
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 100; j++) {
                if ((FlowerCount + i) == 8) {
                    Image[i][j] = Lgreen"■";
                    FlowerCount = 0;
                } else {
                    Image[i][j] = Green"■";
                    FlowerCount++;
                }
            }
        }
    }

    void setActive(bool b) {
        Active = b;
    }

    void ResetPos() {
        X = DefaultX;
        Y = DefaultY;
        Active = true;
        FlowerCount = 0;
    }


    void Render(Scene& s) {
        for (int i = 0; i < Height; i++) {
            if ((Y + i) < 39) {
                for (int j = 0; j < Width; j++) {
                    if (0 <= (X + j) && (X + j) < 100) {
                        if (Image[i][j] != "  ") {
                            s.ScreenBuffer[Y + i][X + j] = Image[i][j];
                        }
                    }
                }
            }
        }
    }

    void MoveGround() {
        for (int i = 0; i < Height; i++) {
            for (int j = 0; j < Width; j++) {
                tempImage[i][j] = Image[i][j];
            }
        }

        for (int i = 0; i < Height; i++) {
            for (int j = 0; j < (Width - 1); j++) {
                Image[i][j] = tempImage[i][j + 1];
            }
            Image[i][99] = tempImage[i][0];
        }
    }
};

class Sword : public Object {
public:
    int MoveSpeed;
    int MoveCount;
    bool IsFalling;
    bool DefaultType;
    string DefaultImage[12][1] = {
                    {Red"■" Reset},
        {BgRed TextWhite"◆" Reset},
        {BgRed TextWhite"◆" Reset},
        {BgRed TextWhite"◆" Reset},
                 {Yellow"  " Reset},
                  {White"  " Reset},
                  {White"  " Reset},
                  {White"  " Reset},
                  {White"  " Reset},
                  {White"  " Reset},
                  {White"  " Reset},
                  {White"  " Reset}
    };

    Sword(int x, int y, int width, int height, bool isfalling) : Object(width, height) {
        X = x;
        Y = y;
        DefaultX = x;
        DefaultY = y;
        Active = false;
        Width = width;
        Height = height;
        IsFalling = isfalling;
        DefaultType = isfalling;
        ImagePaste();
    }

    void ImagePaste() {
        for (int i = 0; i < 12; i++) {
            Image[i][0] = DefaultImage[i][0];
        }
    }

    void Render(Scene& s) {
        for (int i = 0; i < Height; i++) {
            if ((Y + i) < 39) {
                for (int j = 0; j < Width; j++) {
                    if (0 <= (X + j) && (X + j) < 100) {
                        if (Image[i][j] != "  ") {
                            s.ScreenBuffer[Y + i][X + j] = Image[i][j];
                        }
                    }
                }
            }
        }
    }

    void ResetPos() {
        X = DefaultX;
        Y = DefaultY;
        Active = false;
        IsFalling = DefaultType;
    }

    void setActive(bool b) {
        Active = b;
    }

    void MoveSword() {
        if (IsFalling == false) {
            X--;
            X--;
            if (X + Width < 0) {
                ResetPos();
            }
        }
    }

    void FallingSword() {
        if (IsFalling == true) {
            Y++;
            if (Y > 26) {
                IsFalling = false;
            }
        }
    }
};

class PauseUi : public Object {
public:

    string DefaultImage[18][38];

    string PauseImage[18][38] = {
        {"▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤"},

        {"▤","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","▤"},

        {"▤","□","■","■","■","■","■","■","□","□","□","■","■","□","□","□","■","■","□","□","■","■","□","■","■","■","■","■","■","□","■","■","■","■","■","■","□","▤"},

        {"▤","□","■","■","■","■","■","■","□","□","■","■","■","■","□","□","■","■","□","□","■","■","□","■","■","■","■","■","■","□","■","■","■","■","■","■","□","▤"},

        {"▤","□","■","■","□","□","■","■","□","■","■","■","■","■","■","□","■","■","□","□","■","■","□","■","■","□","□","□","□","□","■","■","□","□","□","□","□","▤"},

        {"▤","□","■","■","□","□","■","■","□","■","■","□","□","■","■","□","■","■","□","□","■","■","□","■","■","□","□","□","□","□","■","■","□","□","□","□","□","▤"},

        {"▤","□","■","■","■","■","■","■","□","■","■","□","□","■","■","□","■","■","□","□","■","■","□","■","■","■","■","■","■","□","■","■","■","■","■","■","□","▤"},

        {"▤","□","■","■","■","■","■","■","□","■","■","■","■","■","■","□","■","■","□","□","■","■","□","■","■","■","■","■","■","□","■","■","■","■","■","■","□","▤"},

        {"▤","□","■","■","□","□","□","□","□","■","■","■","■","■","■","□","■","■","□","□","■","■","□","□","□","□","□","■","■","□","■","■","□","□","□","□","□","▤"},

        {"▤","□","■","■","□","□","□","□","□","■","■","□","□","■","■","□","■","■","□","□","■","■","□","□","□","□","□","■","■","□","■","■","□","□","□","□","□","▤"},

        {"▤","□","■","■","□","□","□","□","□","■","■","□","□","■","■","□","■","■","■","■","■","■","□","■","■","■","■","■","■","□","■","■","■","■","■","■","□","▤"},

        {"▤","□","■","■","□","□","□","□","□","■","■","□","□","■","■","□","■","■","■","■","■","■","□","■","■","■","■","■","■","□","■","■","■","■","■","■","□","▤"},

        {"▤","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","▤"},

        {"▤","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","▤"},

        {"▤","□",Text"P.","S.","□",Text"P,"," p","키"," 를","□",Text"누","를","□",Text"시","□",Text"3 ","초","□",Text"뒤","□",Text"다","시","□",Text"시","작","합","니","다",".","□","□","□","□","□","□","□","□","▤"},

        {"▤","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","▤"},

        {"▤","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","▤"},

        {"▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤"}
    };

    string ThreeImage[18][38] = {
        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▤","▤","▤","▤","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▣","▣","▣","▣","▣","▣","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▣","▣","▣","▣","▣","▣","▣","▣","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▣","▣","▣","▤","▤","▤","▤","▣","▣","▣","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▣","▣","▤","  ","  ","  ","  ","▤","▣","▣","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▤","  ","  ","  ","  ","  ","▤","▣","▣","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▣","▣","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▤","▤","▤","▣","▣","▣","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▣","▣","▣","▣","▣","▣","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▣","▣","▣","▣","▣","▣","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▤","▤","▤","▣","▣","▣","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▣","▣","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▤","  ","  ","  ","  ","  ","▤","▣","▣","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▣","▣","▤","  ","  ","  ","  ","▤","▣","▣","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▣","▣","▣","▤","▤","▤","▤","▣","▣","▣","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▣","▣","▣","▣","▣","▣","▣","▣","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▣","▣","▣","▣","▣","▣","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▤","▤","▤","▤","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "}
    };

    string TwoImage[18][38] = {
         {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▤","▤","▤","▤","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▧","▧","▧","▧","▧","▧","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▧","▧","▧","▧","▧","▧","▧","▧","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▧","▧","▧","▤","▤","▤","▤","▧","▧","▧","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▧","▧","▤","  ","  ","  ","  ","▤","▧","▧","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▤","  ","  ","  ","  ","  ","▤","▧","▧","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▧","▧","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▧","▧","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▧","▧","▧","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▧","▧","▧","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▧","▧","▧","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▧","▧","▧","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▧","▧","▧","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▧","▧","▧","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▧","▧","▧","▤","▤","▤","▤","▤","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▧","▧","▧","▧","▧","▧","▧","▧","▧","▧","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▧","▧","▧","▧","▧","▧","▧","▧","▧","▧","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "}
    };

    string OneImage[18][38] = {
        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▦","▦","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▦","▦","▦","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▦","▦","▦","▦","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▦","▦","▦","▦","▦","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▦","▦","▦","▤","▦","▦","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▦","▦","▤","▤","▦","▦","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▤","  ","▤","▦","▦","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▦","▦","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▦","▦","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▦","▦","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▦","▦","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▦","▦","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▦","▦","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▤","▤","▤","▦","▦","▤","▤","▤","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▦","▦","▦","▦","▦","▦","▦","▦","▦","▦","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▦","▦","▦","▦","▦","▦","▦","▦","▦","▦","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "}
    };

    PauseUi(int x, int y, int width, int height) : Object(width, height) {
        X = x;
        Y = y;
        DefaultX = x;
        DefaultY = y;
        Active = false;
        Width = width;
        Height = height;
        SetDefaultImage(0);
        ImagePaste();
    }

    void ResetPos() {
        X = DefaultX;
        Y = DefaultY;
        Active = false;
    }

    void PauseGame(Scene& s) {
        for (int i = 3; i > 0; i--) {
            gotoxy(0, 0);
            s.ClearScreenBuf();
            SetDefaultImage(i);
            ImagePaste();
            s.Draw();
            Sleep(1000);
        }
        setActive(false);
        SetDefaultImage(0);
        ImagePaste();
    }

    void setActive(bool b) {
        Active = b;
    }

    void SetDefaultImage(int number) {
        for (int i = 0; i < 18; i++) {
            for (int j = 0; j < 38; j++) {
                if (number == 3) {
                    DefaultImage[i][j] = ThreeImage[i][j];
                } else if (number == 2) {
                    DefaultImage[i][j] = TwoImage[i][j];
                } else if (number == 1) {
                    DefaultImage[i][j] = OneImage[i][j];
                } else if (number == 0) {
                    DefaultImage[i][j] = PauseImage[i][j];
                }
            }
        }
    }

    void ImagePaste() {
        for (int i = 0; i < 18; i++) {
            for (int j = 0; j < 38; j++) {
                if (DefaultImage[i][j] == "■"){
                    DefaultImage[i][j] = Gray"■";
                } else if (DefaultImage[i][j] == "▤") {
                    DefaultImage[i][j] = Black"▤" Reset;
                } else if (DefaultImage[i][j] == "□") {
                    DefaultImage[i][j] = White"□";
                } else if (DefaultImage[i][j] == "▣") {
                    DefaultImage[i][j] = Green"▣";
                } else if (DefaultImage[i][j] == "▧") {
                    DefaultImage[i][j] = Yellow"▧";
                } else if (DefaultImage[i][j] == "▦") {
                    DefaultImage[i][j] = Red"▦";
                }
                Image[i][j] = DefaultImage[i][j];
            }
        }
    }

    void Render(Scene& s) {
        for (int i = 0; i < Height; i++) {
            if ((Y + i) < 39) {
                for (int j = 0; j < Width; j++) {
                    if (0 <= (X + j) && (X + j) < 100) {
                        if (Image[i][j] != "  ") {
                            s.ScreenBuffer[Y + i][X + j] = Image[i][j];
                        }
                    }
                }
            }
        }
    }

};

class GameOverUI : public Object {
public:

    string DefaultImage[18][38];

    string GameOver[18][38] = {
        {"▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤"},

        {"▤","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","▤"},

        {"▤","□","□","■","■","■","□","□","■","■","□","□","■","□","□","□","■","□","■","■","■","■","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","▤"},

        {"▤","□","■","□","□","□","□","■","□","□","■","□","■","■","□","■","■","□","■","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","▤"},

        {"▤","□","■","□","■","■","□","■","■","■","■","□","■","□","■","□","■","□","■","■","■","■","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","▤"},

        {"▤","□","■","□","□","■","□","■","□","□","■","□","■","□","□","□","■","□","■","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","▤"},

        {"▤","□","□","■","■","■","□","■","□","□","■","□","■","□","□","□","■","□","■","■","■","■","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","▤"},

        {"▤","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","▤"},

        {"▤","□","□","□","□","□","□","□","□","□","□","□","□","□","■","■","□","□","■","□","□","□","■","□","■","■","■","■","□","■","■","■","□","□","■","■","□","▤"},

        {"▤","□","□","□","□","□","□","□","□","□","□","□","□","■","□","□","■","□","■","□","□","□","■","□","■","□","□","□","□","■","□","□","■","□","■","■","□","▤"},

        {"▤","□","□","□","□","□","□","□","□","□","□","□","□","■","□","□","■","□","■","□","□","□","■","□","■","■","■","■","□","■","□","□","■","□","■","■","□","▤"},

        {"▤","□","□","□","□","□","□","□","□","□","□","□","□","■","□","□","■","□","□","■","□","■","□","□","■","□","□","□","□","■","■","■","□","□","□","□","□","▤"},

        {"▤","□","□","□","□","□","□","□","□","□","□","□","□","■","□","□","■","□","□","■","□","■","□","□","■","□","□","□","□","■","□","■","□","□","■","■","□","▤"},

        {"▤","□","□","□","□","□","□","□","□","□","□","□","□","□","■","■","□","□","□","□","■","□","□","□","■","■","■","■","□","■","□","□","■","□","■","■","□","▤"},

        {"▤","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","▤"},

        {"▤","□",Text"P.","S.","□",Text"아","래","□",Text"입","력","창","에","□",Text"이","름","을","□",Text"입","력","하","세","요",". ","□","□","□","□","□","□","□","□","□","□","□","□","□","□","▤"},

        {"▤","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","▤"},

        {"▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤"}
    };

    string TryAgainYes[18][38] = {
        {"▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤"},

        {"▤","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","▤"},

        {"▤","□","■","■","■","□","■","■","□","□","■","□","■","□","□","□","□","□",Text"P.","S.","□",Text"좌","우","방","향","키","를","□",Text"사","용","해","□","□","□","□","□","□","▤"},

        {"▤","□","□","■","□","□","■","□","■","□","■","□","■","□","□","□","□","□","□","□","□",Text"선","택","□",Text"후","□",Text"엔","터","키","□","□","□","□","□","□","□","□","▤"},

        {"▤","□","□","■","□","□","■","■","□","□","□","■","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","▤"},

        {"▤","□","□","■","□","□","■","□","■","□","□","■","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","▤"},

        {"▤","□","□","□","□","□","□","□","□","□","□","□","□","■","□","□","□","■","■","□","□","■","□","□","■","■","■","□","■","□","□","■","□","■","□","■","□","▤"},

        {"▤","□","□","□","□","□","□","□","□","□","□","□","■","□","■","□","■","□","□","□","■","□","■","□","□","■","□","□","■","■","□","■","□","■","□","■","□","▤"},

        {"▤","□","□","□","□","□","□","□","□","□","□","□","■","■","■","□","■","□","■","□","■","■","■","□","□","■","□","□","■","□","■","■","□","□","□","□","□","▤"},

        {"▤","□","□","□","□","□","□","□","□","□","□","□","■","□","■","□","□","■","■","□","■","□","■","□","■","■","■","□","■","□","□","■","□","■","□","■","□","▤"},

        {"▤","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","▤"},

        {"▤","□","□","□","▧","□","□","□","▧","□","▧","▧","▧","▧","□","▧","▧","▧","▧","□","□","□","▦","□","□","▦","□","▦","▦","▦","▦","□","□","□","□","□","□","▤"},

        {"▤","□","□","□","□","▧","□","▧","□","□","▧","□","□","□","□","▧","□","□","□","□","□","□","▦","▦","□","▦","□","▦","□","□","▦","□","□","□","□","□","□","▤"},

        {"▤","□","□","□","□","□","▧","□","□","□","▧","▧","▧","▧","□","▧","▧","▧","▧","□","□","□","▦","▦","▦","▦","□","▦","□","□","▦","□","□","□","□","□","□","▤"},

        {"▤","□","□","□","□","□","▧","□","□","□","▧","□","□","□","□","□","□","□","▧","□","□","□","▦","□","▦","▦","□","▦","□","□","▦","□","□","□","□","□","□","▤"},

        {"▤","□","□","□","□","□","▧","□","□","□","▧","▧","▧","▧","□","▧","▧","▧","▧","□","□","□","▦","□","□","▦","□","▦","▦","▦","▦","□","□","□","□","□","□","▤"},

        {"▤","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","▤"},

        {"▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤"}
    };

    string TryAgainNo[18][38] = {
        {"▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤"},

        {"▤","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","▤"},

        {"▤","□","■","■","■","□","■","■","□","□","■","□","■","□","□","□","□","□",Text"P.","S.","□",Text"좌","우","방","향","키","를","□",Text"사","용","해","□","□","□","□","□","□","▤"},

        {"▤","□","□","■","□","□","■","□","■","□","■","□","■","□","□","□","□","□","□","□","□",Text"선","택","□",Text"후","□",Text"엔","터","키","□","□","□","□","□","□","□","□","▤"},

        {"▤","□","□","■","□","□","■","■","□","□","□","■","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","▤"},

        {"▤","□","□","■","□","□","■","□","■","□","□","■","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","▤"},

        {"▤","□","□","□","□","□","□","□","□","□","□","□","□","■","□","□","□","■","■","□","□","■","□","□","■","■","■","□","■","□","□","■","□","■","□","■","□","▤"},

        {"▤","□","□","□","□","□","□","□","□","□","□","□","■","□","■","□","■","□","□","□","■","□","■","□","□","■","□","□","■","■","□","■","□","■","□","■","□","▤"},

        {"▤","□","□","□","□","□","□","□","□","□","□","□","■","■","■","□","■","□","■","□","■","■","■","□","□","■","□","□","■","□","■","■","□","□","□","□","□","▤"},

        {"▤","□","□","□","□","□","□","□","□","□","□","□","■","□","■","□","□","■","■","□","■","□","■","□","■","■","■","□","■","□","□","■","□","■","□","■","□","▤"},

        {"▤","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","▤"},

        {"▤","□","□","□","▦","□","□","□","▦","□","▦","▦","▦","▦","□","▦","▦","▦","▦","□","□","□","▧","□","□","▧","□","▧","▧","▧","▧","□","□","□","□","□","□","▤"},

        {"▤","□","□","□","□","▦","□","▦","□","□","▦","□","□","□","□","▦","□","□","□","□","□","□","▧","▧","□","▧","□","▧","□","□","▧","□","□","□","□","□","□","▤"},

        {"▤","□","□","□","□","□","▦","□","□","□","▦","▦","▦","▦","□","▦","▦","▦","▦","□","□","□","▧","▧","▧","▧","□","▧","□","□","▧","□","□","□","□","□","□","▤"},

        {"▤","□","□","□","□","□","▦","□","□","□","▦","□","□","□","□","□","□","□","▦","□","□","□","▧","□","▧","▧","□","▧","□","□","▧","□","□","□","□","□","□","▤"},

        {"▤","□","□","□","□","□","▦","□","□","□","▦","▦","▦","▦","□","▦","▦","▦","▦","□","□","□","▧","□","□","▧","□","▧","▧","▧","▧","□","□","□","□","□","□","▤"},

        {"▤","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","▤"},

        {"▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤"}
    };

    string YouWin[18][38] = {
        {"▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤"},

        {"▤","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","▤"},

        {"▤","□","▣","□","□","□","▣","□","□","▣","▣","▣","□","□","▣","□","□","□","▣","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","▤"},

        {"▤","□","▣","□","□","□","▣","□","▣","□","□","□","▣","□","▣","□","□","□","▣","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","▤"},

        {"▤","□","□","▣","□","▣","□","□","▣","□","□","□","▣","□","▣","□","□","□","▣","□","▣","□","□","□","▣","□","▣","▣","▣","▣","□","▣","□","□","□","▣","□","▤"},

        {"▤","□","□","□","▣","□","□","□","▣","□","□","□","▣","□","▣","□","□","□","▣","□","▣","□","□","□","▣","□","□","▣","▣","□","□","▣","▣","□","□","▣","□","▤"},

        {"▤","□","□","□","▣","□","□","□","▣","□","□","□","▣","□","▣","□","□","□","▣","□","▣","□","□","□","▣","□","□","▣","▣","□","□","▣","▣","□","□","▣","□","▤"},

        {"▤","□","□","□","▣","□","□","□","▣","□","□","□","▣","□","▣","□","□","□","▣","□","▣","□","▣","□","▣","□","□","▣","▣","□","□","▣","□","▣","□","▣","□","▤"},

        {"▤","□","□","□","▣","□","□","□","□","▣","▣","▣","□","□","□","▣","▣","▣","□","□","▣","□","▣","□","▣","□","□","▣","▣","□","□","▣","□","□","▣","▣","□","▤"},

        {"▤","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","▣","▣","□","▣","▣","□","□","▣","▣","□","□","▣","□","□","▣","▣","□","▤"},

        {"▤","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","▣","□","□","□","▣","□","▣","▣","▣","▣","□","▣","□","□","□","▣","□","▤"},

        {"▤","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","▤"},

        {"▤","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","▤"},

        {"▤","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","▤"},

        {"▤","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","▤"},

        {"▤","□",Text"P.","S.","□",Text"아","래","□",Text"입","력","창","에","□",Text"이","름","을","□",Text"입","력","하","세","요",". ","□","□","□","□","□","□","□","□","□","□","□","□","□","□","▤"},

        {"▤","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","□","▤"},

        {"▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤"}
    };

    GameOverUI(int x, int y, int width, int height) : Object(width, height) {
        X = x;
        Y = y;
        DefaultX = x;
        DefaultY = y;
        Active = false;
        Width = width;
        Height = height;
        SetDefaultImage(3);
        ImagePaste();
    }

    void ResetPos() {
        X = DefaultX;
        Y = DefaultY;
        Active = false;
        SetDefaultImage(3);
        ImagePaste();
    }

    void setActive(bool b) {
        Active = b;
    }

    void GameOverSituation(Scene& s ,int a) {
        gotoxy(0, 0);
        s.ClearScreenBuf();
        SetDefaultImage(a);
        ImagePaste();
        setActive(true);
        s.Draw();
    }

    void SetDefaultImage(int number) {
        for (int i = 0; i < 18; i++) {
            for (int j = 0; j < 38; j++) {
                if (number == 3) {
                    DefaultImage[i][j] = YouWin[i][j];
                }
                else if (number == 2) {
                    DefaultImage[i][j] = GameOver[i][j];
                }
                else if (number == 1) {
                    DefaultImage[i][j] = TryAgainYes[i][j];
                }
                else if (number == 0) {
                    DefaultImage[i][j] = TryAgainNo[i][j];
                }
            }
        }
    }

    void ImagePaste() {
        for (int i = 0; i < 18; i++) {
            for (int j = 0; j < 38; j++) {
                if (DefaultImage[i][j] == "■") {
                    DefaultImage[i][j] = Red"■";
                }
                else if (DefaultImage[i][j] == "▤") {
                    DefaultImage[i][j] = Black"▤" Reset;
                }
                else if (DefaultImage[i][j] == "□") {
                    DefaultImage[i][j] = White"□";
                }
                else if (DefaultImage[i][j] == "▣") {
                    DefaultImage[i][j] = Yellow"▣";
                }
                else if (DefaultImage[i][j] == "▧") {
                    DefaultImage[i][j] = Gray"▧";
                }
                else if (DefaultImage[i][j] == "▦") {
                    DefaultImage[i][j] = Lgray"▦";
                }
                Image[i][j] = DefaultImage[i][j];
            }
        }
    }

    void Render(Scene& s) {
        for (int i = 0; i < Height; i++) {
            if ((Y + i) < 39) {
                for (int j = 0; j < Width; j++) {
                    if (0 <= (X + j) && (X + j) < 100) {
                        if (Image[i][j] != "  ") {
                            s.ScreenBuffer[Y + i][X + j] = Image[i][j];
                        }
                    }
                }
            }
        }
    }

};

class StartUI : public Object
{
public:

    string DefaultImage[30][80] = {
        {"□","□","□","□","□","□","  ","□","□","  ","  ","  ","  ","  ","□","□","□","□","□","□","  ","□","□","  ","  ","  ","□","□","  ","□","□","□","□","□","□","  ","  ","□","□","□","□","□","□","  ","□","□","  ","  ","□","□","  ","□","□","  ","  ","  ","□","□","  ","□","□","  ","  ","  ","□","□","  ","□","□","□","□","□","□","  ","□","□","□","□","□","□"},

        {"□","■","■","■","■","■","  ","□","■","  ","  ","  ","  ","  ","□","■","■","■","■","■","  ","□","■","□","  ","□","■","■","  ","□","■","■","■","■","■","  ","  ","□","■","■","■","■","■","  ","□","■","  ","  ","□","■","  ","□","■","■","  ","  ","□","■","  ","□","■","■","  ","  ","□","■","  ","□","■","■","■","■","■","  ","□","■","■","■","■","■"},

        {"□","■","  ","  ","  ","  ","  ","□","■","  ","  ","  ","  ","  ","  ","  ","□","■","  ","  ","  ","□","■","■","□","■","■","■","  ","□","■","  ","  ","  ","  ","  ","  ","□","■","  ","  ","□","■","  ","□","■","  ","  ","□","■","  ","□","■","■","  ","  ","□","■","  ","□","■","■","  ","  ","□","■","  ","□","■","  ","  ","  ","  ","  ","□","■","  ","  ","□","■"},

        {"□","■","  ","  ","  ","  ","  ","□","■","  ","  ","  ","  ","  ","  ","  ","□","■","  ","  ","  ","□","■","■","■","■","■","■","  ","□","■","  ","  ","  ","  ","  ","  ","□","■","  ","  ","□","■","  ","□","■","  ","  ","□","■","  ","□","■","■","■","  ","□","■","  ","□","■","■","■","  ","□","■","  ","□","■","  ","  ","  ","  ","  ","□","■","  ","  ","□","■"},

        {"□","■","□","□","□","□","  ","□","■","  ","  ","  ","  ","  ","  ","  ","□","■","  ","  ","  ","□","■","  ","■","  ","□","■","  ","□","■","□","□","□","□","  ","  ","□","■","□","□","□","■","  ","□","■","  ","  ","□","■","  ","□","■","■","■","  ","□","■","  ","□","■","■","■","  ","□","■","  ","□","■","□","□","□","□","  ","□","■","□","□","□","■"},

        {"□","■","■","■","■","■","  ","□","■","  ","  ","  ","  ","  ","  ","  ","□","■","  ","  ","  ","□","■","  ","  ","  ","□","■","  ","□","■","■","■","■","■","  ","  ","□","■","■","■","■","■","  ","□","■","  ","  ","□","■","  ","□","■","  ","■","■","■","■","  ","□","■","  ","■","■","■","■","  ","□","■","■","■","■","■","  ","□","■","■","■","■","■"},

        {"  ","  ","  ","  ","□","■","  ","□","■","  ","  ","  ","  ","  ","  ","  ","□","■","  ","  ","  ","□","■","  ","  ","  ","□","■","  ","□","■","  ","  ","  ","  ","  ","  ","□","■","  ","■","■","  ","  ","□","■","  ","  ","□","■","  ","□","■","  ","□","■","■","■","  ","□","■","  ","□","■","■","■","  ","□","■","  ","  ","  ","  ","  ","□","■","  ","■","■","  "},

        {"  ","  ","  ","  ","□","■","  ","□","■","  ","  ","  ","  ","  ","  ","  ","□","■","  ","  ","  ","□","■","  ","  ","  ","□","■","  ","□","■","  ","  ","  ","  ","  ","  ","□","■","  ","■","■","  ","  ","□","■","  ","  ","□","■","  ","□","■","  ","  ","□","■","■","  ","□","■","  ","  ","□","■","■","  ","□","■","  ","  ","  ","  ","  ","□","■","  ","■","■","  "},

        {"□","□","□","□","□","■","  ","□","■","□","□","□","□","  ","□","□","□","■","□","□","  ","□","■","  ","  ","  ","□","■","  ","□","■","□","□","□","□","  ","  ","□","■","  ","  ","■","□","  ","□","■","□","□","□","■","  ","□","■","  ","  ","□","■","■","  ","□","■","  ","  ","□","■","■","  ","□","■","□","□","□","□","  ","□","■","  ","  ","■","□"},

        {"□","■","■","■","■","■","  ","□","■","■","■","■","■","  ","□","■","■","■","■","■","  ","□","■","  ","  ","  ","□","■","  ","□","■","■","■","■","■","  ","  ","□","■","  ","  ","■","■","  ","□","■","■","■","■","■","  ","□","■","  ","  ","  ","□","■","  ","□","■","  ","  ","  ","□","■","  ","□","■","■","■","■","■","  ","□","■","  ","  ","■","■"},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","□","□","□","  ","□","□","□","  ","  ","□","  ","  ","□","□","  ","  ","□","□","□","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","□","□","□","  ","□","  ","□","  ","□","  ","  ","  ","□","□","□","  ","□","□","□","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","□","  ","  ","  ","  ","□","  ","  ","□","  ","□","  ","□","  ","□","  ","  ","□","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","□","  ","□","  ","□","  ","□","  ","□","  ","  ","  ","□","  ","  ","  ","□","  ","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","□","□","□","  ","  ","□","  ","  ","□","□","□","  ","□","□","  ","  ","  ","□","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","□","□","  ","  ","□","  ","□","  ","□","  ","  ","  ","□","□","□","  ","□","□","□","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","  ","  ","□","  ","  ","□","  ","  ","□","  ","□","  ","□","  ","□","  ","  ","□","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","□","  ","□","  ","□","  ","□","  ","□","  ","  ","  ","□","  ","  ","  ","  ","  ","□","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","□","□","□","  ","  ","□","  ","  ","□","  ","□","  ","□","  ","□","  ","  ","□","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","□","  ","□","  ","□","□","□","  ","□","□","□","  ","□","□","□","  ","□","□","□","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","□","□","□","  ","□","  ","  ","  ","□","□","□","  ","□","□","□","  ","□","□","□","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","□","□","  ","  ","  ","□","  ","  ","□","  ","□","  ","□","  ","□","  ","□","□","□","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","□","  ","  ","  ","□","  ","  ","  ","□","  ","□","  ","□","  ","  ","  ","□","  ","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","□","  ","□","  ","□","  ","□","  ","□"," " Reset" ","□","  ","□","  ","□","  ","□","  ","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","□","  ","  ","  ","□","  ","  ","  ","□","  ","□","  ","□","□","□","  ","□","□","□","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","□","□","  ","  ","□","□","□","  ","□","□","□","  ","□","□","  ","  ","□","□","□","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","□","  ","  ","  ","□","  ","  ","  ","□","  ","□","  ","  ","  ","□","  ","□","  ","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","□","  ","□","  ","□","  ","□","  ","□",Reset" " White" ","□","  ","□","  ","□","  ","  ","  ","□","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","□","□","□","  ","□","□","□","  ","□","□","□","  ","□","□","□","  ","□","□","□","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","□","  ","□","  ","□","  ","□","  ","□","  ","□","  ","□","  ","□","  ","□","□","□","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "},

        {"  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","  ","  ","  ","  ","  ","  ","  ","  ","  ","  "}

    };

    StartUI(int x, int y, int width, int height) : Object(width, height) {
        X = x;
        Y = y;
        Active = true;
        Width = width;
        Height = height;
        ImagePaste();
    }

    void ImagePaste() {
        for (int i = 0; i < 30; i++) {
            for (int j = 0; j < 80; j++) {
                if (DefaultImage[i][j] == "■") {
                    if (j == 79) {
                        DefaultImage[i][j] = Lmint"■" Reset;
                    } else {
                        DefaultImage[i][j] = Lmint"■";
                    }
                } else if (DefaultImage[i][j] == "▤") {
                    DefaultImage[i][j] = Lgray"▤";
                } else if (DefaultImage[i][j] == "□") {
                    if (j == 79)
                    {
                        DefaultImage[i][j] = White"□" Reset;
                    } else {
                        DefaultImage[i][j] = White"□";
                    }
                }
                if (j < 79 && DefaultImage[i][j + 1] == "  " && DefaultImage[i][j] != "  ") {
                    DefaultImage[i][j] += Reset;
                }
                Image[i][j] = DefaultImage[i][j];
            }
        }
    }

    void setActive(bool b) {
        Active = b;
    }

    void Render(Scene& s) {
        for (int i = 0; i < Height; i++) {
            if ((Y + i) < 39) {
                for (int j = 0; j < Width; j++) {
                    if (0 <= (X + j) && (X + j) < 100) {
                        if (Image[i][j] != "  ") {
                            s.ScreenBuffer[Y + i][X + j] = Image[i][j];
                        }
                    }
                }
            }
        }
    }
};

class Arrow : public Object
{
public:

    bool UpDown;
    bool LeftRight;

    Arrow(int x, int y, int width, int height) : Object(width, height) {
        X = x;
        Y = y;
        Active = true;
        Width = width;
        Height = height;
        UpDown = true;
        LeftRight = true;
        ImagePaste();
    }

    string LeftArrow[7][7] = {
        {"  ","  ","  ","  ","  ","□","□",},

        {"  ","  ","  ","□","□","  ","  ",},

        {"  ","□","□","  ","  ","  ","  ",},

        {"□","  ","  ","  ","  ","  ","  ",},

        {"  ","□","□","  ","  ","  ","  ",},

        {"  ","  ","  ","□","□","  ","  ",},

        {"  ","  ","  ","  ","  ","□","□",},
    };

    string RightArrow[7][7] = {
        {"□","□","  ","  ","  ","  ","  ",},

        {"  ","  ","□","□","  ","  ","  ",},

        {"  ","  ","  ","  ","□","□","  ",},

        {"  ","  ","  ","  ","  ","  ","□",},

        {"  ","  ","  ","  ","□","□","  ",},

        {"  ","  ","□","□","  ","  ","  ",},

        {"□","□","  ","  ","  ","  ","  ",},
    };



    void ImagePaste() {

        if (LeftRight == true) {
            for (int i = 0; i < 7; i++) {
                for (int j = 0; j < 7; j++) {
                    if (LeftArrow[i][j] == "□") {
                        if (j == 6) {
                            LeftArrow[i][j] = White"□" Reset;
                        } else {
                            LeftArrow[i][j] = White"□";
                        }
                    } if (j < 6 && LeftArrow[i][j + 1] == "  " && LeftArrow[i][j] != "  ") {
                        LeftArrow[i][j] += Reset;
                    }
                    Image[i][j] = LeftArrow[i][j];
                }
            }
        } else if (LeftRight == false) {
            for (int i = 0; i < 7; i++) {
                for (int j = 0; j < 7; j++) {
                    if (RightArrow[i][j] == "□") {
                        if (j == 6) {
                            RightArrow[i][j] = White"□" Reset;
                        } else {
                            RightArrow[i][j] = White"□";
                        }
                    } if (j < 6 && RightArrow[i][j + 1] == "  " && RightArrow[i][j] != "  ") {
                        RightArrow[i][j] += Reset;
                    }
                    Image[i][j] = RightArrow[i][j];
                }
            }
        }
    }

    void setActive(bool b) {
        Active = b;
    }

    void Render(Scene& s) {
        for (int i = 0; i < Height; i++) {
            if ((Y + i) < 39) {
                for (int j = 0; j < Width; j++) {
                    if (0 <= (X + j) && (X + j) < 100) {
                        if (Image[i][j] != "  ") {
                            s.ScreenBuffer[Y + i][X + j] = Image[i][j];
                        }
                    }
                }
            }
        }
    }
};

class Rules : public Object
{
public:
    Rules(int x, int y, int width, int height) : Object(width, height)
    {
        X = x;
        Y = y;
        Active = false;
        Width = width;
        Height = height;
        ImagePaste();
    }

    string DefaultImage[30][40] = {
        {"■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■"},

        {"■","■","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","■","■"},

        {"■","▤","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▤","■"},

        {"■","▤","▣","□","□","□","□","□","□","▣","□","□","▣","▣","□","□","▣","□","□","▣","▣","▣","▣","▣","□","□","□","□","□","□","▣","□","□","□","□","□","□","▣","▤","■"},

        {"■","▤","▣","□","□","□","□","□","□","▣","□","□","▣","▣","□","□","▣","□","□","▣","▣","▣","▣","▣","□","□","□","□","□","□","▣","□","□","□","□","□","□","▣","▤","■"},

        {"■","▤","▣","□","□","▣","▣","□","□","▣","□","□","▣","▣","□","□","▣","□","□","▣","▣","▣","▣","▣","□","□","▣","▣","▣","▣","▣","□","□","▣","▣","▣","▣","▣","▤","■"},

        {"■","▤","▣","□","□","▣","▣","□","□","▣","□","□","▣","▣","□","□","▣","□","□","▣","▣","▣","▣","▣","□","□","▣","▣","▣","▣","▣","□","□","▣","▣","▣","▣","▣","▤","■"},

        {"■","▤","▣","□","□","□","□","□","□","▣","□","□","▣","▣","□","□","▣","□","□","▣","▣","▣","▣","▣","□","□","□","□","□","□","▣","□","□","□","□","□","□","▣","▤","■"},

        {"■","▤","▣","□","□","□","□","□","□","▣","□","□","▣","▣","□","□","▣","□","□","▣","▣","▣","▣","▣","□","□","□","□","□","□","▣","□","□","□","□","□","□","▣","▤","■"},

        {"■","▤","▣","□","□","▣","□","□","▣","▣","□","□","▣","▣","□","□","▣","□","□","▣","▣","▣","▣","▣","□","□","▣","▣","▣","▣","▣","▣","▣","▣","▣","□","□","▣","▤","■"},

        {"■","▤","▣","□","□","▣","□","□","▣","▣","□","□","▣","▣","□","□","▣","□","□","▣","▣","▣","▣","▣","□","□","▣","▣","▣","▣","▣","▣","▣","▣","▣","□","□","▣","▤","■"},

        {"■","▤","▣","□","□","▣","▣","□","□","▣","□","□","□","□","□","□","▣","□","□","□","□","□","□","▣","□","□","□","□","□","□","▣","□","□","□","□","□","□","▣","▤","■"},

        {"■","▤","▣","□","□","▣","▣","□","□","▣","□","□","□","□","□","□","▣","□","□","□","□","□","□","▣","□","□","□","□","□","□","▣","□","□","□","□","□","□","▣","▤","■"},

        {"■","▤","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▤","■"},

        {"■","▤","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▤","■"},

        {"■","▤","▣",Text"1.","▣",Text"스","페","이","스","바","를","▣",Text"누","를","▣",Text"시","▣",Text"점","프","합","니","다",". ","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▤","■"},

        {"■","▤","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▤","■"},

        {"■","▤","▣",Text"2.","▣",Text"P,"," p","를","▣",Text"누","를","▣",Text"시","▣",Text"일","시","▣",Text"정","지","되","며","▣",Text"다","시","▣",Text"누","를","▣",Text"시","▣","▣","▣","▣","▣","▣","▣","▣","▣","▤","■"},

        {"■","▤","▣","▣","▣",Text"3 ","초","▣",Text"뒤","▣",Text"다","시","▣",Text"시","작","합","니","다",". ","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▤","■"},

        {"■","▤","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▤","■"},

        {"■","▤","▣",Text"3.","▣",Text"장","애","물","에","▣",Text"맞","으","면","▣",Text"죽","습","니","다",". ","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▤","■"},

        {"■","▤","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▤","■"},

        {"■","▤","▣",Text"4.","▣",Text"점","수","가","▣",Text"올","라","갈","수","록","▣",Text"속","도","가","▣",Text"빨","라","집","니","다",". ","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▤","■"},

        {"■","▤","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▤","■"},

        {"■","▤","▣",Text"P.","S.","▣",Text"이","▣",Text"창","은","▣",Text"엔","터","키","를","▣",Text"누","르","면","▣",Text"닫","힙","니","다",". ","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▤","■"},

        {"■","▤","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▤","■"},

        {"■","▤","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▤","■"},

        {"■","▤","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▤","■"},

        {"■","■","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","■","■"},

        {"■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■"}
    };

    void ImagePaste() {
        for (int i = 0; i < 30; i++) {
            for (int j = 0; j < 40; j++) {
                if (DefaultImage[i][j] == "■") {
                    if (j == 39) {
                        DefaultImage[i][j] = Gray"■" Reset;
                    } else {
                        DefaultImage[i][j] = Gray"■";
                    }
                } else if (DefaultImage[i][j] == "▤") {
                    DefaultImage[i][j] = Lgray"▤";
                } else if (DefaultImage[i][j] == "▣") {
                    DefaultImage[i][j] = White"▣"; 
                } else if (DefaultImage[i][j] == "□") {
                    DefaultImage[i][j] = Black"□";
                }
                Image[i][j] = DefaultImage[i][j];
            }
        }
    }

    void setActive(bool b) {
        Active = b;
    }

    void Render(Scene& s) {
        for (int i = 0; i < Height; i++) {
            if ((Y + i) < 39) {
                for (int j = 0; j < Width; j++) {
                    if (0 <= (X + j) && (X + j) < 100) {
                        if (Image[i][j] != "  ") {
                            s.ScreenBuffer[Y + i][X + j] = Image[i][j];
                        }
                    }
                }
            }
        }
    }

};

class Ranks : public Object
{
public:

    Ranks(int x, int y, int width, int height) : Object(width, height)
    {
        X = x;
        Y = y;
        Active = false;
        Width = width;
        Height = height;
        ImagePaste();
    }


    string LeaderBoard[10][4] = {
        // 순위 이름 점수 스테이지
        {"","","",""},
        {"","","",""},
        {"","","",""},
        {"","","",""},
        {"","","",""},
        {"","","",""},
        {"","","",""},
        {"","","",""},
        {"","","",""},
        {"","","",""}
    };

    string DefaultImage[30][40] = {
        {"■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■"},

        {"■","■","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","■","■"},

        {"■","▤","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▤","■"},

        {"■","▤","▣","□","□","□","□","□","□","▣","▣","▣","□","□","▣","▣","▣","□","□","▣","▣","□","□","▣","□","□","▣","▣","□","□","▣","□","□","□","□","□","□","▣","▤","■"},

        {"■","▤","▣","□","□","□","□","□","□","▣","▣","□","□","□","□","▣","▣","□","□","□","▣","□","□","▣","□","□","▣","▣","□","□","▣","□","□","□","□","□","□","▣","▤","■"},

        {"■","▤","▣","□","□","▣","▣","□","□","▣","□","□","□","□","□","□","▣","□","□","□","▣","□","□","▣","□","□","▣","□","□","▣","▣","□","□","▣","▣","▣","▣","▣","▤","■"},

        {"■","▤","▣","□","□","▣","▣","□","□","▣","□","□","▣","▣","□","□","▣","□","□","□","▣","□","□","▣","□","□","▣","□","□","▣","▣","□","□","▣","▣","▣","▣","▣","▤","■"},

        {"■","▤","▣","□","□","□","□","□","□","▣","□","□","▣","▣","□","□","▣","□","□","□","□","□","□","▣","□","□","□","□","▣","▣","▣","□","□","□","□","□","□","▣","▤","■"},

        {"■","▤","▣","□","□","□","□","□","□","▣","□","□","□","□","□","□","▣","□","□","□","□","□","□","▣","□","□","□","□","▣","▣","▣","□","□","□","□","□","□","▣","▤","■"},

        {"■","▤","▣","□","□","▣","□","□","▣","▣","□","□","□","□","□","□","▣","□","□","▣","□","□","□","▣","□","□","▣","□","□","▣","▣","▣","▣","▣","▣","□","□","▣","▤","■"},

        {"■","▤","▣","□","□","▣","□","□","▣","▣","□","□","▣","▣","□","□","▣","□","□","▣","□","□","□","▣","□","□","▣","□","□","▣","▣","▣","▣","▣","▣","□","□","▣","▤","■"},

        {"■","▤","▣","□","□","▣","▣","□","□","▣","□","□","▣","▣","□","□","▣","□","□","▣","□","□","□","▣","□","□","▣","▣","□","□","▣","□","□","□","□","□","□","▣","▤","■"},

        {"■","▤","▣","□","□","▣","▣","□","□","▣","□","□","▣","▣","□","□","▣","□","□","▣","▣","□","□","▣","□","□","▣","▣","□","□","▣","□","□","□","□","□","□","▣","▤","■"},

        {"■","▤","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▤","■"},

        {"■","▤","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▤","■"},

        {"■","▤","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▤","■"},

        {"■","▤","▣","                                                                    ","▣","▤","■"},

        {"■","▤","▣","                                                                    ","▣","▤","■"},

        {"■","▤","▣","                                                                    ","▣","▤","■"},

        {"■","▤","▣","                                                                    ","▣","▤","■"},

        {"■","▤","▣","                                                                    ","▣","▤","■"},

        {"■","▤","▣","                                                                    ","▣","▤","■"},

        {"■","▤","▣","                                                                    ","▣","▤","■"},

        {"■","▤","▣","                                                                    ","▣","▤","■"},

        {"■","▤","▣","                                                                    ","▣","▤","■"},

        {"■","▤","▣","                                                                    ","▣","▤","■"},

        {"■","▤","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▤","■"},

        {"■","▤","▣",Text"P.","S.","▣",Text"이","▣",Text"창","은","▣",Text"엔","터","키","를","▣",Text"누","르","면","▣",Text"닫","힙","니","다",". ","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▣","▤","■"},

        {"■","■","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","▤","■","■"},

        {"■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■","■"}
    };

    void ImagePaste() {
        for (int i = 0; i < 30; i++) {
            for (int j = 0; j < 40; j++) {
                if (DefaultImage[i][j] == "■")
                {
                    DefaultImage[i][j] = Gray"■" Reset;
                }
                else if (DefaultImage[i][j] == "▤") {
                    DefaultImage[i][j] = Lgray"▤";
                }
                else if (DefaultImage[i][j] == "▣") {
                    DefaultImage[i][j] = White"▣";
                }
                else if (DefaultImage[i][j] == "□") {
                    DefaultImage[i][j] = Black"□";
                }
                Image[i][j] = DefaultImage[i][j];
            }
        }
    }

    void setActive(bool b) {
        Active = b;
    }

    void Render(Scene& s) {
        for (int i = 0; i < Height; i++) {
            if ((Y + i) < 39) {
                for (int j = 0; j < Width; j++) {
                    if (0 <= (X + j) && (X + j) < 100) {
                        if (Image[i][j] != "  ") {
                            s.ScreenBuffer[Y + i][X + j] = Image[i][j];
                        }
                    }
                }
            }
        }
    }

    void readDataFromFile(const string& filename) {
        ifstream inputFile(filename);
        if (!inputFile.is_open()) {
            cout << "파일 열기 실패" << endl;
            return;
        }

        string line;
        int row = 0;
        while (getline(inputFile, line)) {
            istringstream iss(line);
            string token;
            int col = 0;
            while (getline(iss, token, ',')) {
                LeaderBoard[row][col] = token;
                col++;
            }
            row++;
        }
        inputFile.close();
    }

    void writeDataToFile(const string& filename) {
        ofstream outputFile(filename);
        if (!outputFile.is_open()) {
            cout << "파일 열기 실패" << endl;
            return;
        }

        for (int i = 0; i < 10; i++) {
            for (int j = 0; j < 4; j++) {
                outputFile << LeaderBoard[i][j];
                if (j != 9) {
                    outputFile << ",";
                }
            }
            outputFile << endl;
        }
        outputFile.close();
    }

    void writeLeaderBoard(string name, int score, int stageNumber) {
        if (name.length() > 10)
        {
            name = name.substr(0, 10);
        }
        for (int i = 0; i < 10; i++) {
            if (LeaderBoard[i][2] == "" || score > stoi(LeaderBoard[i][2])) {
                for (int j = 9; j > i; j--) {
                    LeaderBoard[j][1] = LeaderBoard[j - 1][1];
                    LeaderBoard[j][2] = LeaderBoard[j - 1][2];
                    LeaderBoard[j][3] = LeaderBoard[j - 1][3];
                }
                LeaderBoard[i][1] = name;
                LeaderBoard[i][2] = to_string(score);
                LeaderBoard[i][3] = to_string(stageNumber);
                break;
            }
        }
        for (int i = 0; i < 10; i++) {
            if (i < 9){
                LeaderBoard[i][0] = to_string(i + 1) + ".  ";
            } else if (i == 9) {
                LeaderBoard[i][0] = to_string(i + 1) + ". ";
            }
        }
    }

    void loadingLeaderBoard()
    {
        string rankline ="";
        DefaultImage[16][3];
        for (int i = 0; i < 10; i++) {
            rankline = "순위 :  " + LeaderBoard[i][0] + "  이름 :  " + LeaderBoard[i][1] + "  점수 :  " + LeaderBoard[i][2] + "  스테이지  번호 :  " + LeaderBoard[i][3];
            DefaultImage[16 + i][3].erase(0, rankline.size());
            DefaultImage[16 + i][3].insert(0, rankline);
            DefaultImage[16 + i][2] += Text;
        }
        ImagePaste();
    }
};

class Player : public Object
{

public:
    int MoveCount;
    bool IsJump;
    bool IsFalling;
    int JumpCount;

    Player(int x, int y, int width, int height) : Object(width, height) {
        X = x;
        Y = y;
        DefaultY = y;
        Active = true;
        MoveCount = 0;
        JumpCount = 0;
        IsFalling = false;
        IsJump = false;
        Width = width;
        Height = height;
        ImagePaste();
    }

    string DefaultImage[10][10] = {
        {"  ","  ","  ","  ","■","  ","  ","  ","  ","  "},

        {"  ","  ","  ","■","■","■","  ","  ","  ","  "},

        {"  ","  ","■","■","■","■","□","  ","  ","  "},

        {"  ","▤","▤","■","■","■","□","□","  ","  "},

        {"■","▤","▤","■","■","■","■","■","□","  "},

        {"■","■","■","▣","■","■","■","▣","□","▧"},

        {"■","■","■","■","■","▲","■","■","□","▧"},

        {"■","■","■","■","■","■","■","□","▧","▤"},

        {"  ","■","■","■","□","□","□","▧","▤" ,"  "},

        {"  ","  ","□","□","▧","▧","▧" ,"  ","  ","  "}
    };

    void Render(Scene& s) {
        for (int i = 0; i < Height; i++)
        {
            for (int j = 0; j < Width; j++)
            {
                if (Image[i][j] != "  ")
                {
                    s.ScreenBuffer[Y + i][X + j] = Image[i][j];
                }
            }
        }
    }

    void ResetPos()
    {
        Active = true;
        MoveCount = 0;
        JumpCount = 0;
        IsFalling = false;
        IsJump = false;
        Y = DefaultY;
    }


    void ImagePaste() {
        for (int i = 0; i < Height; i++) {
            for (int j = 0; j < Width; j++) {
                Image[i][j] = DefaultImage[i][j];
            }
        }

        for (int i = 0; i < Height; i++) {
            for (int j = 0; j < Width; j++) {
                if (DefaultImage[i][j] == "■") {
                    DefaultImage[i][j] = Lmint"■" Reset;
                } else if (DefaultImage[i][j] == "▤") {
                    DefaultImage[i][j] = White"▤" Reset;
                } else if (DefaultImage[i][j] == "□") {
                        DefaultImage[i][j] = Mint"□" Reset;
                } else if (DefaultImage[i][j] == "▧") {
                    DefaultImage[i][j] = Lblue"▧" Reset;
                } else if (DefaultImage[i][j] == "▲" || DefaultImage[i][j] == "▣") {
                    DefaultImage[i][j] = TextBlack BgLmint + DefaultImage[i][j];
                }
                Image[i][j] = DefaultImage[i][j];
            }
        }
    }

    void MovePlayer() {
        if (IsJump == false) {
            if (MoveCount < 4) {
                Y--;
                MoveCount++;
            } else {
                Y++;
                MoveCount++;
                if (MoveCount >= 8) {
                    MoveCount = 0;
                }
            }
        } else {
            MoveCount = 0;
        }
    }

    void JumpPlayer() {
        if (IsJump == true) {
            if (IsFalling == false) {
                Y--;
                JumpCount++;
                if (JumpCount >= 15) {
                    IsFalling = true;
                }
            } else if (IsFalling == true) {
                Y++;
                JumpCount--;
                if (JumpCount <= 1) {
                    IsFalling = false;
                    IsJump = false;
                    Y = DefaultY;
                }
            }
        }
    }

    bool Collider(Sword& sw) { // 교체

        if (sw.X >= X+2 && sw.X <= X + 6) {
            if ((Y + 9) >= 27) {
                return true;
            }
        }
        else if (sw.X == X + 1 || sw.X == X + 7 || sw.X == X + 8)
        {
            if ((Y + 9) >= 28) {
                return true;
            }
        }
        else if (sw.X == X || sw.X == X + 9)
        {
            if ((Y + 9) >= 29) {
                return true;
            }
        }
    }
};

class Stage {
public:

    int StageArray[120];

    Stage() {};

    void readDataFromFile(const string& filename) {
        ifstream inputFile(filename);
        if (!inputFile.is_open()) {
            cout << "파일 열기 실패" << endl;
            return;
        }

        string line;
        int row = 0;
        while (getline(inputFile, line)) {
            istringstream iss(line);
            string token;
            int col = 0;
            while (getline(iss, token, ',')) {
                if (col > 120)
                {
                    break;
                }
                StageArray[col] = stoi(token);
                col++;
            }
        }
        inputFile.close();
    }
};

int main() {
    ios::sync_with_stdio(false); // 표준 입출력 가속화
    cin.tie(NULL);
    cout.tie(NULL);
    system("mode con cols=200 lines=41");

    Scene GameScene;
    Scene MainScene;

    Stage stage;
    Player player(5, 25, 10, 10);
    vector<Cloud> CloudArray;
    Cloud cloud1(30, 15, 15, 7, 1);
    Cloud cloud2(70, 20, 15, 7, 2);
    Cloud cloud3(10, 12, 15, 7, 3);
    Ground ground(100, 4);
    Mountain mountain(20, 13, 46, 22);
    Sword fallingsword(99, 1, 1, 12, true);
    Sword sword(99, 27, 1, 12, false);

    PauseUi pauseui(31, 10, 38, 18);
    GameOverUI gameoverui(31, 10, 38, 18);

    StartUI startui(10, 5, 80, 30);
    Arrow arrow(46, 17, 7, 7);
    Rules rules(30, 5, 40, 30);
    Ranks ranks(30, 5, 40, 30);

    string leaderboard = "LeaderBoard.txt";
    ranks.readDataFromFile(leaderboard);

    string stagefile = "1.txt";
    stage.readDataFromFile(stagefile);

    int speed = 0;
    int score = 0;
    int stagesequence = 0;
    bool IsStart = false;
    bool Pause = false;
    bool CloseProgram = false;
    bool FsCollision;
    bool SCollision;
    string name = "";
    int stagenumber = stoi(stagefile.substr(0, stagefile.find(".")));

    GameScene.AddObject(mountain);
    GameScene.AddObject(cloud1);
    GameScene.AddObject(cloud2);
    GameScene.AddObject(cloud3);
    GameScene.AddObject(fallingsword);
    GameScene.AddObject(sword);
    GameScene.AddObject(ground);
    GameScene.AddObject(player);
    GameScene.AddObject(pauseui);
    GameScene.AddObject(gameoverui);

    MainScene.AddObject(startui);
    MainScene.AddObject(arrow);
    MainScene.AddObject(rules);
    MainScene.AddObject(ranks);

    while (!CloseProgram) {
        if (IsStart == true) {
            gotoxy(0, 0);

            auto startTime = chrono::high_resolution_clock::now();

            switch (stage.StageArray[stagesequence])
            {
            case 0:
                break;
            case 1:
                sword.setActive(true);
                break;
            case 2:
                fallingsword.setActive(true);
                break;
            }

            GameScene.ClearScreenBuf();
            if (_kbhit()) {
                char key = _getch();
                if (key == ' ') {
                    player.IsJump = true;
                }
                else if (key == 'p' || key == 'P') {
                    Pause = true;
                    pauseui.setActive(true);
                }
            }
            player.JumpPlayer();
            player.MovePlayer();
            cloud1.MoveCloud();
            cloud2.MoveCloud();
            cloud3.MoveCloud();
            mountain.MoveMountain();
            ground.MoveGround();

            if (fallingsword.Active == true)
            {
                fallingsword.MoveSword();
                fallingsword.FallingSword();
            }

            if (sword.Active == true)
            {
                sword.MoveSword();
            }

            GameScene.Draw();
            cout << "점수 : " << score << " , 속도 : " << speed;
            FsCollision = player.Collider(fallingsword);
            SCollision = player.Collider(sword);
            if (FsCollision || SCollision) {
                gameoverui.GameOverSituation(GameScene, 2);
                cout << "이름을 입력하시오(5글자 제한, 띄어쓰기 불가) : ";
                cin >> name;
                gotoxy(0, 39);
                cout << "                                                                     ";
                ranks.writeLeaderBoard(name, score, stagenumber);
                ranks.writeDataToFile(leaderboard);
                gameoverui.GameOverSituation(GameScene, 1);
                int select = 1;
                while (true)
                {
                    if (_kbhit()) {
                        char key = _getch();
                        if (key == 75)
                        {
                            select = 1;
                            gameoverui.GameOverSituation(GameScene, select);
                        }
                        else if (key == 77)
                        {
                            select = 0;
                            gameoverui.GameOverSituation(GameScene, select);
                        }else if (key == 13)
                        {
                            break;
                        }
                    }                   
                }
                if (select == 1)
                {
                    GameScene.ResetObject();
                    speed = 0;
                    score = 0;
                    FsCollision = false;
                    SCollision = false;
                    //GameScene.ClearScreenBuf();
                    //GameScene.Draw();
                } else if (select == 0) {
                    GameScene.ResetObject();
                    speed = 0;
                    score = 0;
                    IsStart = false;
                    FsCollision = false;
                    SCollision = false;
                }
            }
                auto endTime = chrono::high_resolution_clock::now();

                chrono::duration<double> elapsedTime = endTime - startTime;

                double targetFrameTime = 1.0 / 60;

                double sleepTime = targetFrameTime - elapsedTime.count();
                if (sleepTime > 0) {
                    this_thread::sleep_for(chrono::duration<double>(sleepTime));
                }

                if (Pause == true) {
                    while (Pause) {
                        if (_kbhit()) {
                            char key = _getch();
                            if (key == 'p' || key == 'P') {
                                Pause = false;
                            }
                        }
                    }
                    pauseui.PauseGame(GameScene);
                }

                score++;
                if (score % 50 == 0) {
                    stagesequence++;
                    if (stagesequence > 120) {

                    }
                }
                if (score % 100 == 0) {
                    speed++;
                }
            }
            else if (IsStart == false) {
                gotoxy(0, 0);

                auto startTime = chrono::high_resolution_clock::now();

                MainScene.ClearScreenBuf();

                if (_kbhit()) {
                    char key = _getch();
                    if (key == 80 && arrow.UpDown == true) {
                        arrow.Y += 10;
                        arrow.UpDown = false;
                    }
                    else if (key == 72 && arrow.UpDown == false) {
                        arrow.Y -= 10;
                        arrow.UpDown = true;
                    }
                    else if (key == 13 && arrow.UpDown == false && arrow.LeftRight == true) {
                        CloseProgram = true;
                    }
                    else if (key == 13 && arrow.UpDown == true && arrow.LeftRight == true) {
                        GameScene.ResetObject();
                        IsStart = true;
                    }
                    else if (key == 13 && arrow.LeftRight == false && arrow.UpDown == false) {
                        if (ranks.Active == false) {
                            ranks.setActive(true);
                        }
                        else {
                            ranks.setActive(false);
                        }
                        ranks.loadingLeaderBoard();
                    }
                    else if (key == 13 && arrow.LeftRight == false && arrow.UpDown == true) {
                        if (rules.Active == false) {
                            rules.setActive(true);
                        }
                        else {
                            rules.setActive(false);
                        }
                    }
                    else if (key == 75 && arrow.LeftRight == false) {
                        arrow.LeftRight = true;
                        arrow.ImagePaste();
                    }
                    else if (key == 77 && arrow.LeftRight == true) {
                        arrow.LeftRight = false;
                        arrow.ImagePaste();
                    }
                }
                MainScene.Draw();

                auto endTime = chrono::high_resolution_clock::now();

                chrono::duration<double> elapsedTime = endTime - startTime;

                double targetFrameTime = 1.0 / 60;

                double sleepTime = targetFrameTime - elapsedTime.count();
                if (sleepTime > 0) {
                    this_thread::sleep_for(chrono::duration<double>(sleepTime));
                }
            }
        }
    return 0;
}
